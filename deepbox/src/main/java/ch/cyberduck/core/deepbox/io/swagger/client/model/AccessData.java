/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.deepbox.io.swagger.client.model.Access;
import ch.cyberduck.core.deepbox.io.swagger.client.model.Permission;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * AccessData
 */



public class AccessData {
  @JsonProperty("accesses")
  private List<Access> accesses = null;

  @JsonProperty("availablePermissions")
  private List<Permission> availablePermissions = null;

  public AccessData accesses(List<Access> accesses) {
    this.accesses = accesses;
    return this;
  }

  public AccessData addAccessesItem(Access accessesItem) {
    if (this.accesses == null) {
      this.accesses = new ArrayList<>();
    }
    this.accesses.add(accessesItem);
    return this;
  }

   /**
   * Get accesses
   * @return accesses
  **/
  @Schema(description = "")
  public List<Access> getAccesses() {
    return accesses;
  }

  public void setAccesses(List<Access> accesses) {
    this.accesses = accesses;
  }

  public AccessData availablePermissions(List<Permission> availablePermissions) {
    this.availablePermissions = availablePermissions;
    return this;
  }

  public AccessData addAvailablePermissionsItem(Permission availablePermissionsItem) {
    if (this.availablePermissions == null) {
      this.availablePermissions = new ArrayList<>();
    }
    this.availablePermissions.add(availablePermissionsItem);
    return this;
  }

   /**
   * Get availablePermissions
   * @return availablePermissions
  **/
  @Schema(description = "")
  public List<Permission> getAvailablePermissions() {
    return availablePermissions;
  }

  public void setAvailablePermissions(List<Permission> availablePermissions) {
    this.availablePermissions = availablePermissions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessData accessData = (AccessData) o;
    return Objects.equals(this.accesses, accessData.accesses) &&
        Objects.equals(this.availablePermissions, accessData.availablePermissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accesses, availablePermissions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessData {\n");
    
    sb.append("    accesses: ").append(toIndentedString(accesses)).append("\n");
    sb.append("    availablePermissions: ").append(toIndentedString(availablePermissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
