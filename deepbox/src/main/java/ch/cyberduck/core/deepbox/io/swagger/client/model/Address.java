/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.deepbox.io.swagger.client.model.TimeUserContext;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * Address
 */



public class Address {
  @JsonProperty("addressId")
  private String addressId = null;

  @JsonProperty("emailAvailable")
  private Boolean emailAvailable = null;

  @JsonProperty("addressEmail")
  private String addressEmail = null;

  @JsonProperty("frontendAvailable")
  private Boolean frontendAvailable = null;

  @JsonProperty("addressFrontendUrl")
  private String addressFrontendUrl = null;

  @JsonProperty("apiAvailable")
  private Boolean apiAvailable = null;

  @JsonProperty("addressApiUrl")
  private String addressApiUrl = null;

  @JsonProperty("nodeDisplayName")
  private String nodeDisplayName = null;

  @JsonProperty("nodeMimeType")
  private String nodeMimeType = null;

  @JsonProperty("created")
  private TimeUserContext created = null;

  @JsonProperty("lastUsage")
  private DateTime lastUsage = null;

  @JsonProperty("usageCount")
  private Long usageCount = null;

  @JsonProperty("validFrom")
  private DateTime validFrom = null;

  @JsonProperty("validUntil")
  private DateTime validUntil = null;

  @JsonProperty("description")
  private String description = null;

  public Address addressId(String addressId) {
    this.addressId = addressId;
    return this;
  }

   /**
   * Get addressId
   * @return addressId
  **/
  @Schema(description = "")
  public String getAddressId() {
    return addressId;
  }

  public void setAddressId(String addressId) {
    this.addressId = addressId;
  }

  public Address emailAvailable(Boolean emailAvailable) {
    this.emailAvailable = emailAvailable;
    return this;
  }

   /**
   * Get emailAvailable
   * @return emailAvailable
  **/
  @Schema(description = "")
  public Boolean isEmailAvailable() {
    return emailAvailable;
  }

  public void setEmailAvailable(Boolean emailAvailable) {
    this.emailAvailable = emailAvailable;
  }

  public Address addressEmail(String addressEmail) {
    this.addressEmail = addressEmail;
    return this;
  }

   /**
   * Get addressEmail
   * @return addressEmail
  **/
  @Schema(description = "")
  public String getAddressEmail() {
    return addressEmail;
  }

  public void setAddressEmail(String addressEmail) {
    this.addressEmail = addressEmail;
  }

  public Address frontendAvailable(Boolean frontendAvailable) {
    this.frontendAvailable = frontendAvailable;
    return this;
  }

   /**
   * Get frontendAvailable
   * @return frontendAvailable
  **/
  @Schema(description = "")
  public Boolean isFrontendAvailable() {
    return frontendAvailable;
  }

  public void setFrontendAvailable(Boolean frontendAvailable) {
    this.frontendAvailable = frontendAvailable;
  }

  public Address addressFrontendUrl(String addressFrontendUrl) {
    this.addressFrontendUrl = addressFrontendUrl;
    return this;
  }

   /**
   * Get addressFrontendUrl
   * @return addressFrontendUrl
  **/
  @Schema(description = "")
  public String getAddressFrontendUrl() {
    return addressFrontendUrl;
  }

  public void setAddressFrontendUrl(String addressFrontendUrl) {
    this.addressFrontendUrl = addressFrontendUrl;
  }

  public Address apiAvailable(Boolean apiAvailable) {
    this.apiAvailable = apiAvailable;
    return this;
  }

   /**
   * Get apiAvailable
   * @return apiAvailable
  **/
  @Schema(description = "")
  public Boolean isApiAvailable() {
    return apiAvailable;
  }

  public void setApiAvailable(Boolean apiAvailable) {
    this.apiAvailable = apiAvailable;
  }

  public Address addressApiUrl(String addressApiUrl) {
    this.addressApiUrl = addressApiUrl;
    return this;
  }

   /**
   * Get addressApiUrl
   * @return addressApiUrl
  **/
  @Schema(description = "")
  public String getAddressApiUrl() {
    return addressApiUrl;
  }

  public void setAddressApiUrl(String addressApiUrl) {
    this.addressApiUrl = addressApiUrl;
  }

  public Address nodeDisplayName(String nodeDisplayName) {
    this.nodeDisplayName = nodeDisplayName;
    return this;
  }

   /**
   * Get nodeDisplayName
   * @return nodeDisplayName
  **/
  @Schema(description = "")
  public String getNodeDisplayName() {
    return nodeDisplayName;
  }

  public void setNodeDisplayName(String nodeDisplayName) {
    this.nodeDisplayName = nodeDisplayName;
  }

  public Address nodeMimeType(String nodeMimeType) {
    this.nodeMimeType = nodeMimeType;
    return this;
  }

   /**
   * Get nodeMimeType
   * @return nodeMimeType
  **/
  @Schema(description = "")
  public String getNodeMimeType() {
    return nodeMimeType;
  }

  public void setNodeMimeType(String nodeMimeType) {
    this.nodeMimeType = nodeMimeType;
  }

  public Address created(TimeUserContext created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @Schema(description = "")
  public TimeUserContext getCreated() {
    return created;
  }

  public void setCreated(TimeUserContext created) {
    this.created = created;
  }

  public Address lastUsage(DateTime lastUsage) {
    this.lastUsage = lastUsage;
    return this;
  }

   /**
   * Get lastUsage
   * @return lastUsage
  **/
  @Schema(description = "")
  public DateTime getLastUsage() {
    return lastUsage;
  }

  public void setLastUsage(DateTime lastUsage) {
    this.lastUsage = lastUsage;
  }

  public Address usageCount(Long usageCount) {
    this.usageCount = usageCount;
    return this;
  }

   /**
   * Get usageCount
   * @return usageCount
  **/
  @Schema(description = "")
  public Long getUsageCount() {
    return usageCount;
  }

  public void setUsageCount(Long usageCount) {
    this.usageCount = usageCount;
  }

  public Address validFrom(DateTime validFrom) {
    this.validFrom = validFrom;
    return this;
  }

   /**
   * Get validFrom
   * @return validFrom
  **/
  @Schema(description = "")
  public DateTime getValidFrom() {
    return validFrom;
  }

  public void setValidFrom(DateTime validFrom) {
    this.validFrom = validFrom;
  }

  public Address validUntil(DateTime validUntil) {
    this.validUntil = validUntil;
    return this;
  }

   /**
   * Get validUntil
   * @return validUntil
  **/
  @Schema(description = "")
  public DateTime getValidUntil() {
    return validUntil;
  }

  public void setValidUntil(DateTime validUntil) {
    this.validUntil = validUntil;
  }

  public Address description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Address address = (Address) o;
    return Objects.equals(this.addressId, address.addressId) &&
        Objects.equals(this.emailAvailable, address.emailAvailable) &&
        Objects.equals(this.addressEmail, address.addressEmail) &&
        Objects.equals(this.frontendAvailable, address.frontendAvailable) &&
        Objects.equals(this.addressFrontendUrl, address.addressFrontendUrl) &&
        Objects.equals(this.apiAvailable, address.apiAvailable) &&
        Objects.equals(this.addressApiUrl, address.addressApiUrl) &&
        Objects.equals(this.nodeDisplayName, address.nodeDisplayName) &&
        Objects.equals(this.nodeMimeType, address.nodeMimeType) &&
        Objects.equals(this.created, address.created) &&
        Objects.equals(this.lastUsage, address.lastUsage) &&
        Objects.equals(this.usageCount, address.usageCount) &&
        Objects.equals(this.validFrom, address.validFrom) &&
        Objects.equals(this.validUntil, address.validUntil) &&
        Objects.equals(this.description, address.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressId, emailAvailable, addressEmail, frontendAvailable, addressFrontendUrl, apiAvailable, addressApiUrl, nodeDisplayName, nodeMimeType, created, lastUsage, usageCount, validFrom, validUntil, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Address {\n");
    
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    emailAvailable: ").append(toIndentedString(emailAvailable)).append("\n");
    sb.append("    addressEmail: ").append(toIndentedString(addressEmail)).append("\n");
    sb.append("    frontendAvailable: ").append(toIndentedString(frontendAvailable)).append("\n");
    sb.append("    addressFrontendUrl: ").append(toIndentedString(addressFrontendUrl)).append("\n");
    sb.append("    apiAvailable: ").append(toIndentedString(apiAvailable)).append("\n");
    sb.append("    addressApiUrl: ").append(toIndentedString(addressApiUrl)).append("\n");
    sb.append("    nodeDisplayName: ").append(toIndentedString(nodeDisplayName)).append("\n");
    sb.append("    nodeMimeType: ").append(toIndentedString(nodeMimeType)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    lastUsage: ").append(toIndentedString(lastUsage)).append("\n");
    sb.append("    usageCount: ").append(toIndentedString(usageCount)).append("\n");
    sb.append("    validFrom: ").append(toIndentedString(validFrom)).append("\n");
    sb.append("    validUntil: ").append(toIndentedString(validUntil)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
