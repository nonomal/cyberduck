/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * AdminBoxRelation
 */



public class AdminBoxRelation {
  @JsonProperty("relationId")
  private String relationId = null;

  @JsonProperty("sourceBoxNodeId")
  private String sourceBoxNodeId = null;

  @JsonProperty("targetDeepBoxNodeId")
  private String targetDeepBoxNodeId = null;

  @JsonProperty("targetDeepBoxName")
  private String targetDeepBoxName = null;

  @JsonProperty("targetBoxNodeId")
  private String targetBoxNodeId = null;

  @JsonProperty("targetBoxName")
  private String targetBoxName = null;

  public AdminBoxRelation relationId(String relationId) {
    this.relationId = relationId;
    return this;
  }

   /**
   * Get relationId
   * @return relationId
  **/
  @Schema(description = "")
  public String getRelationId() {
    return relationId;
  }

  public void setRelationId(String relationId) {
    this.relationId = relationId;
  }

  public AdminBoxRelation sourceBoxNodeId(String sourceBoxNodeId) {
    this.sourceBoxNodeId = sourceBoxNodeId;
    return this;
  }

   /**
   * Get sourceBoxNodeId
   * @return sourceBoxNodeId
  **/
  @Schema(description = "")
  public String getSourceBoxNodeId() {
    return sourceBoxNodeId;
  }

  public void setSourceBoxNodeId(String sourceBoxNodeId) {
    this.sourceBoxNodeId = sourceBoxNodeId;
  }

  public AdminBoxRelation targetDeepBoxNodeId(String targetDeepBoxNodeId) {
    this.targetDeepBoxNodeId = targetDeepBoxNodeId;
    return this;
  }

   /**
   * Get targetDeepBoxNodeId
   * @return targetDeepBoxNodeId
  **/
  @Schema(description = "")
  public String getTargetDeepBoxNodeId() {
    return targetDeepBoxNodeId;
  }

  public void setTargetDeepBoxNodeId(String targetDeepBoxNodeId) {
    this.targetDeepBoxNodeId = targetDeepBoxNodeId;
  }

  public AdminBoxRelation targetDeepBoxName(String targetDeepBoxName) {
    this.targetDeepBoxName = targetDeepBoxName;
    return this;
  }

   /**
   * Get targetDeepBoxName
   * @return targetDeepBoxName
  **/
  @Schema(description = "")
  public String getTargetDeepBoxName() {
    return targetDeepBoxName;
  }

  public void setTargetDeepBoxName(String targetDeepBoxName) {
    this.targetDeepBoxName = targetDeepBoxName;
  }

  public AdminBoxRelation targetBoxNodeId(String targetBoxNodeId) {
    this.targetBoxNodeId = targetBoxNodeId;
    return this;
  }

   /**
   * Get targetBoxNodeId
   * @return targetBoxNodeId
  **/
  @Schema(description = "")
  public String getTargetBoxNodeId() {
    return targetBoxNodeId;
  }

  public void setTargetBoxNodeId(String targetBoxNodeId) {
    this.targetBoxNodeId = targetBoxNodeId;
  }

  public AdminBoxRelation targetBoxName(String targetBoxName) {
    this.targetBoxName = targetBoxName;
    return this;
  }

   /**
   * Get targetBoxName
   * @return targetBoxName
  **/
  @Schema(description = "")
  public String getTargetBoxName() {
    return targetBoxName;
  }

  public void setTargetBoxName(String targetBoxName) {
    this.targetBoxName = targetBoxName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdminBoxRelation adminBoxRelation = (AdminBoxRelation) o;
    return Objects.equals(this.relationId, adminBoxRelation.relationId) &&
        Objects.equals(this.sourceBoxNodeId, adminBoxRelation.sourceBoxNodeId) &&
        Objects.equals(this.targetDeepBoxNodeId, adminBoxRelation.targetDeepBoxNodeId) &&
        Objects.equals(this.targetDeepBoxName, adminBoxRelation.targetDeepBoxName) &&
        Objects.equals(this.targetBoxNodeId, adminBoxRelation.targetBoxNodeId) &&
        Objects.equals(this.targetBoxName, adminBoxRelation.targetBoxName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(relationId, sourceBoxNodeId, targetDeepBoxNodeId, targetDeepBoxName, targetBoxNodeId, targetBoxName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdminBoxRelation {\n");
    
    sb.append("    relationId: ").append(toIndentedString(relationId)).append("\n");
    sb.append("    sourceBoxNodeId: ").append(toIndentedString(sourceBoxNodeId)).append("\n");
    sb.append("    targetDeepBoxNodeId: ").append(toIndentedString(targetDeepBoxNodeId)).append("\n");
    sb.append("    targetDeepBoxName: ").append(toIndentedString(targetDeepBoxName)).append("\n");
    sb.append("    targetBoxNodeId: ").append(toIndentedString(targetBoxNodeId)).append("\n");
    sb.append("    targetBoxName: ").append(toIndentedString(targetBoxName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
