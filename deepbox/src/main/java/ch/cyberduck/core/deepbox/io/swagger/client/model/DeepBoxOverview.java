/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.deepbox.io.swagger.client.model.BoxEntry;
import ch.cyberduck.core.deepbox.io.swagger.client.model.CompanyEntry;
import ch.cyberduck.core.deepbox.io.swagger.client.model.Pagination;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * DeepBoxOverview
 */



public class DeepBoxOverview {
  @JsonProperty("company")
  private CompanyEntry company = null;

  @JsonProperty("deepBoxNodeId")
  private String deepBoxNodeId = null;

  @JsonProperty("deepBoxName")
  private String deepBoxName = null;

  @JsonProperty("boxType")
  private String boxType = null;

  @JsonProperty("boxes")
  private List<BoxEntry> boxes = null;

  @JsonProperty("pagination")
  private Pagination pagination = null;

  @JsonProperty("size")
  private Integer size = null;

  public DeepBoxOverview company(CompanyEntry company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @Schema(description = "")
  public CompanyEntry getCompany() {
    return company;
  }

  public void setCompany(CompanyEntry company) {
    this.company = company;
  }

  public DeepBoxOverview deepBoxNodeId(String deepBoxNodeId) {
    this.deepBoxNodeId = deepBoxNodeId;
    return this;
  }

   /**
   * Get deepBoxNodeId
   * @return deepBoxNodeId
  **/
  @Schema(description = "")
  public String getDeepBoxNodeId() {
    return deepBoxNodeId;
  }

  public void setDeepBoxNodeId(String deepBoxNodeId) {
    this.deepBoxNodeId = deepBoxNodeId;
  }

  public DeepBoxOverview deepBoxName(String deepBoxName) {
    this.deepBoxName = deepBoxName;
    return this;
  }

   /**
   * Get deepBoxName
   * @return deepBoxName
  **/
  @Schema(description = "")
  public String getDeepBoxName() {
    return deepBoxName;
  }

  public void setDeepBoxName(String deepBoxName) {
    this.deepBoxName = deepBoxName;
  }

  public DeepBoxOverview boxType(String boxType) {
    this.boxType = boxType;
    return this;
  }

   /**
   * Get boxType
   * @return boxType
  **/
  @Schema(description = "")
  public String getBoxType() {
    return boxType;
  }

  public void setBoxType(String boxType) {
    this.boxType = boxType;
  }

  public DeepBoxOverview boxes(List<BoxEntry> boxes) {
    this.boxes = boxes;
    return this;
  }

  public DeepBoxOverview addBoxesItem(BoxEntry boxesItem) {
    if (this.boxes == null) {
      this.boxes = new ArrayList<>();
    }
    this.boxes.add(boxesItem);
    return this;
  }

   /**
   * Get boxes
   * @return boxes
  **/
  @Schema(description = "")
  public List<BoxEntry> getBoxes() {
    return boxes;
  }

  public void setBoxes(List<BoxEntry> boxes) {
    this.boxes = boxes;
  }

  public DeepBoxOverview pagination(Pagination pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @Schema(description = "")
  public Pagination getPagination() {
    return pagination;
  }

  public void setPagination(Pagination pagination) {
    this.pagination = pagination;
  }

  public DeepBoxOverview size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeepBoxOverview deepBoxOverview = (DeepBoxOverview) o;
    return Objects.equals(this.company, deepBoxOverview.company) &&
        Objects.equals(this.deepBoxNodeId, deepBoxOverview.deepBoxNodeId) &&
        Objects.equals(this.deepBoxName, deepBoxOverview.deepBoxName) &&
        Objects.equals(this.boxType, deepBoxOverview.boxType) &&
        Objects.equals(this.boxes, deepBoxOverview.boxes) &&
        Objects.equals(this.pagination, deepBoxOverview.pagination) &&
        Objects.equals(this.size, deepBoxOverview.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, deepBoxNodeId, deepBoxName, boxType, boxes, pagination, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeepBoxOverview {\n");
    
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    deepBoxNodeId: ").append(toIndentedString(deepBoxNodeId)).append("\n");
    sb.append("    deepBoxName: ").append(toIndentedString(deepBoxName)).append("\n");
    sb.append("    boxType: ").append(toIndentedString(boxType)).append("\n");
    sb.append("    boxes: ").append(toIndentedString(boxes)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
