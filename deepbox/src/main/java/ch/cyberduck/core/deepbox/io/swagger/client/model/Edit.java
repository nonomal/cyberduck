/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Edit
 */



public class Edit {
  @JsonProperty("editKey")
  private String editKey = null;

  @JsonProperty("editBaseUrl")
  private String editBaseUrl = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("mimeType")
  private String mimeType = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("documentUrl")
  private String documentUrl = null;

  @JsonProperty("callbackUrl")
  private String callbackUrl = null;

  public Edit editKey(String editKey) {
    this.editKey = editKey;
    return this;
  }

   /**
   * Get editKey
   * @return editKey
  **/
  @Schema(description = "")
  public String getEditKey() {
    return editKey;
  }

  public void setEditKey(String editKey) {
    this.editKey = editKey;
  }

  public Edit editBaseUrl(String editBaseUrl) {
    this.editBaseUrl = editBaseUrl;
    return this;
  }

   /**
   * Get editBaseUrl
   * @return editBaseUrl
  **/
  @Schema(description = "")
  public String getEditBaseUrl() {
    return editBaseUrl;
  }

  public void setEditBaseUrl(String editBaseUrl) {
    this.editBaseUrl = editBaseUrl;
  }

  public Edit name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Edit mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @Schema(description = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public Edit size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public Edit documentUrl(String documentUrl) {
    this.documentUrl = documentUrl;
    return this;
  }

   /**
   * Get documentUrl
   * @return documentUrl
  **/
  @Schema(description = "")
  public String getDocumentUrl() {
    return documentUrl;
  }

  public void setDocumentUrl(String documentUrl) {
    this.documentUrl = documentUrl;
  }

  public Edit callbackUrl(String callbackUrl) {
    this.callbackUrl = callbackUrl;
    return this;
  }

   /**
   * Get callbackUrl
   * @return callbackUrl
  **/
  @Schema(description = "")
  public String getCallbackUrl() {
    return callbackUrl;
  }

  public void setCallbackUrl(String callbackUrl) {
    this.callbackUrl = callbackUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Edit edit = (Edit) o;
    return Objects.equals(this.editKey, edit.editKey) &&
        Objects.equals(this.editBaseUrl, edit.editBaseUrl) &&
        Objects.equals(this.name, edit.name) &&
        Objects.equals(this.mimeType, edit.mimeType) &&
        Objects.equals(this.size, edit.size) &&
        Objects.equals(this.documentUrl, edit.documentUrl) &&
        Objects.equals(this.callbackUrl, edit.callbackUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(editKey, editBaseUrl, name, mimeType, size, documentUrl, callbackUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Edit {\n");
    
    sb.append("    editKey: ").append(toIndentedString(editKey)).append("\n");
    sb.append("    editBaseUrl: ").append(toIndentedString(editBaseUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    documentUrl: ").append(toIndentedString(documentUrl)).append("\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
