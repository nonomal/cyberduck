/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.deepbox.io.swagger.client.model.Permission;
import ch.cyberduck.core.deepbox.io.swagger.client.model.UserContext;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * InShareAccess
 */



public class InShareAccess {
  @JsonProperty("accessId")
  private String accessId = null;

  @JsonProperty("accessNodeId")
  private String accessNodeId = null;

  @JsonProperty("accessNodeName")
  private String accessNodeName = null;

  @JsonProperty("accessNodeMimeType")
  private String accessNodeMimeType = null;

  @JsonProperty("permission")
  private Permission permission = null;

  @JsonProperty("withUser")
  private UserContext withUser = null;

  public InShareAccess accessId(String accessId) {
    this.accessId = accessId;
    return this;
  }

   /**
   * Get accessId
   * @return accessId
  **/
  @Schema(description = "")
  public String getAccessId() {
    return accessId;
  }

  public void setAccessId(String accessId) {
    this.accessId = accessId;
  }

  public InShareAccess accessNodeId(String accessNodeId) {
    this.accessNodeId = accessNodeId;
    return this;
  }

   /**
   * Get accessNodeId
   * @return accessNodeId
  **/
  @Schema(description = "")
  public String getAccessNodeId() {
    return accessNodeId;
  }

  public void setAccessNodeId(String accessNodeId) {
    this.accessNodeId = accessNodeId;
  }

  public InShareAccess accessNodeName(String accessNodeName) {
    this.accessNodeName = accessNodeName;
    return this;
  }

   /**
   * Get accessNodeName
   * @return accessNodeName
  **/
  @Schema(description = "")
  public String getAccessNodeName() {
    return accessNodeName;
  }

  public void setAccessNodeName(String accessNodeName) {
    this.accessNodeName = accessNodeName;
  }

  public InShareAccess accessNodeMimeType(String accessNodeMimeType) {
    this.accessNodeMimeType = accessNodeMimeType;
    return this;
  }

   /**
   * Get accessNodeMimeType
   * @return accessNodeMimeType
  **/
  @Schema(description = "")
  public String getAccessNodeMimeType() {
    return accessNodeMimeType;
  }

  public void setAccessNodeMimeType(String accessNodeMimeType) {
    this.accessNodeMimeType = accessNodeMimeType;
  }

  public InShareAccess permission(Permission permission) {
    this.permission = permission;
    return this;
  }

   /**
   * Get permission
   * @return permission
  **/
  @Schema(description = "")
  public Permission getPermission() {
    return permission;
  }

  public void setPermission(Permission permission) {
    this.permission = permission;
  }

  public InShareAccess withUser(UserContext withUser) {
    this.withUser = withUser;
    return this;
  }

   /**
   * Get withUser
   * @return withUser
  **/
  @Schema(description = "")
  public UserContext getWithUser() {
    return withUser;
  }

  public void setWithUser(UserContext withUser) {
    this.withUser = withUser;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InShareAccess inShareAccess = (InShareAccess) o;
    return Objects.equals(this.accessId, inShareAccess.accessId) &&
        Objects.equals(this.accessNodeId, inShareAccess.accessNodeId) &&
        Objects.equals(this.accessNodeName, inShareAccess.accessNodeName) &&
        Objects.equals(this.accessNodeMimeType, inShareAccess.accessNodeMimeType) &&
        Objects.equals(this.permission, inShareAccess.permission) &&
        Objects.equals(this.withUser, inShareAccess.withUser);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessId, accessNodeId, accessNodeName, accessNodeMimeType, permission, withUser);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InShareAccess {\n");
    
    sb.append("    accessId: ").append(toIndentedString(accessId)).append("\n");
    sb.append("    accessNodeId: ").append(toIndentedString(accessNodeId)).append("\n");
    sb.append("    accessNodeName: ").append(toIndentedString(accessNodeName)).append("\n");
    sb.append("    accessNodeMimeType: ").append(toIndentedString(accessNodeMimeType)).append("\n");
    sb.append("    permission: ").append(toIndentedString(permission)).append("\n");
    sb.append("    withUser: ").append(toIndentedString(withUser)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
