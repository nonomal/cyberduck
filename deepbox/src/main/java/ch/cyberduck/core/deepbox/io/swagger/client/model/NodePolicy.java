/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * NodePolicy
 */



public class NodePolicy {
  @JsonProperty("canListChildren")
  private Boolean canListChildren = null;

  @JsonProperty("canAddChildren")
  private Boolean canAddChildren = null;

  @JsonProperty("canMoveWithinBox")
  private Boolean canMoveWithinBox = null;

  @JsonProperty("canMoveOutOfBox")
  private Boolean canMoveOutOfBox = null;

  @JsonProperty("canDelete")
  private Boolean canDelete = null;

  @JsonProperty("canPurge")
  private Boolean canPurge = null;

  @JsonProperty("canRevert")
  private Boolean canRevert = null;

  @JsonProperty("canDownload")
  private Boolean canDownload = null;

  @JsonProperty("canDirectDownload")
  private Boolean canDirectDownload = null;

  @JsonProperty("canAnalyze")
  private Boolean canAnalyze = null;

  @JsonProperty("canSign")
  private Boolean canSign = null;

  @JsonProperty("canReadNodeInfo")
  private Boolean canReadNodeInfo = null;

  @JsonProperty("canRename")
  private Boolean canRename = null;

  @JsonProperty("canAdminAccess")
  private Boolean canAdminAccess = null;

  @JsonProperty("canComment")
  private Boolean canComment = null;

  @JsonProperty("canTag")
  private Boolean canTag = null;

  @JsonProperty("canI18n")
  private Boolean canI18n = null;

  @JsonProperty("canRevision")
  private Boolean canRevision = null;

  @JsonProperty("canWatch")
  private Boolean canWatch = null;

  public NodePolicy canListChildren(Boolean canListChildren) {
    this.canListChildren = canListChildren;
    return this;
  }

   /**
   * Get canListChildren
   * @return canListChildren
  **/
  @Schema(description = "")
  public Boolean isCanListChildren() {
    return canListChildren;
  }

  public void setCanListChildren(Boolean canListChildren) {
    this.canListChildren = canListChildren;
  }

  public NodePolicy canAddChildren(Boolean canAddChildren) {
    this.canAddChildren = canAddChildren;
    return this;
  }

   /**
   * Get canAddChildren
   * @return canAddChildren
  **/
  @Schema(description = "")
  public Boolean isCanAddChildren() {
    return canAddChildren;
  }

  public void setCanAddChildren(Boolean canAddChildren) {
    this.canAddChildren = canAddChildren;
  }

  public NodePolicy canMoveWithinBox(Boolean canMoveWithinBox) {
    this.canMoveWithinBox = canMoveWithinBox;
    return this;
  }

   /**
   * Get canMoveWithinBox
   * @return canMoveWithinBox
  **/
  @Schema(description = "")
  public Boolean isCanMoveWithinBox() {
    return canMoveWithinBox;
  }

  public void setCanMoveWithinBox(Boolean canMoveWithinBox) {
    this.canMoveWithinBox = canMoveWithinBox;
  }

  public NodePolicy canMoveOutOfBox(Boolean canMoveOutOfBox) {
    this.canMoveOutOfBox = canMoveOutOfBox;
    return this;
  }

   /**
   * Get canMoveOutOfBox
   * @return canMoveOutOfBox
  **/
  @Schema(description = "")
  public Boolean isCanMoveOutOfBox() {
    return canMoveOutOfBox;
  }

  public void setCanMoveOutOfBox(Boolean canMoveOutOfBox) {
    this.canMoveOutOfBox = canMoveOutOfBox;
  }

  public NodePolicy canDelete(Boolean canDelete) {
    this.canDelete = canDelete;
    return this;
  }

   /**
   * Get canDelete
   * @return canDelete
  **/
  @Schema(description = "")
  public Boolean isCanDelete() {
    return canDelete;
  }

  public void setCanDelete(Boolean canDelete) {
    this.canDelete = canDelete;
  }

  public NodePolicy canPurge(Boolean canPurge) {
    this.canPurge = canPurge;
    return this;
  }

   /**
   * Get canPurge
   * @return canPurge
  **/
  @Schema(description = "")
  public Boolean isCanPurge() {
    return canPurge;
  }

  public void setCanPurge(Boolean canPurge) {
    this.canPurge = canPurge;
  }

  public NodePolicy canRevert(Boolean canRevert) {
    this.canRevert = canRevert;
    return this;
  }

   /**
   * Get canRevert
   * @return canRevert
  **/
  @Schema(description = "")
  public Boolean isCanRevert() {
    return canRevert;
  }

  public void setCanRevert(Boolean canRevert) {
    this.canRevert = canRevert;
  }

  public NodePolicy canDownload(Boolean canDownload) {
    this.canDownload = canDownload;
    return this;
  }

   /**
   * Get canDownload
   * @return canDownload
  **/
  @Schema(description = "")
  public Boolean isCanDownload() {
    return canDownload;
  }

  public void setCanDownload(Boolean canDownload) {
    this.canDownload = canDownload;
  }

  public NodePolicy canDirectDownload(Boolean canDirectDownload) {
    this.canDirectDownload = canDirectDownload;
    return this;
  }

   /**
   * Get canDirectDownload
   * @return canDirectDownload
  **/
  @Schema(description = "")
  public Boolean isCanDirectDownload() {
    return canDirectDownload;
  }

  public void setCanDirectDownload(Boolean canDirectDownload) {
    this.canDirectDownload = canDirectDownload;
  }

  public NodePolicy canAnalyze(Boolean canAnalyze) {
    this.canAnalyze = canAnalyze;
    return this;
  }

   /**
   * Get canAnalyze
   * @return canAnalyze
  **/
  @Schema(description = "")
  public Boolean isCanAnalyze() {
    return canAnalyze;
  }

  public void setCanAnalyze(Boolean canAnalyze) {
    this.canAnalyze = canAnalyze;
  }

  public NodePolicy canSign(Boolean canSign) {
    this.canSign = canSign;
    return this;
  }

   /**
   * Get canSign
   * @return canSign
  **/
  @Schema(description = "")
  public Boolean isCanSign() {
    return canSign;
  }

  public void setCanSign(Boolean canSign) {
    this.canSign = canSign;
  }

  public NodePolicy canReadNodeInfo(Boolean canReadNodeInfo) {
    this.canReadNodeInfo = canReadNodeInfo;
    return this;
  }

   /**
   * Get canReadNodeInfo
   * @return canReadNodeInfo
  **/
  @Schema(description = "")
  public Boolean isCanReadNodeInfo() {
    return canReadNodeInfo;
  }

  public void setCanReadNodeInfo(Boolean canReadNodeInfo) {
    this.canReadNodeInfo = canReadNodeInfo;
  }

  public NodePolicy canRename(Boolean canRename) {
    this.canRename = canRename;
    return this;
  }

   /**
   * Get canRename
   * @return canRename
  **/
  @Schema(description = "")
  public Boolean isCanRename() {
    return canRename;
  }

  public void setCanRename(Boolean canRename) {
    this.canRename = canRename;
  }

  public NodePolicy canAdminAccess(Boolean canAdminAccess) {
    this.canAdminAccess = canAdminAccess;
    return this;
  }

   /**
   * Get canAdminAccess
   * @return canAdminAccess
  **/
  @Schema(description = "")
  public Boolean isCanAdminAccess() {
    return canAdminAccess;
  }

  public void setCanAdminAccess(Boolean canAdminAccess) {
    this.canAdminAccess = canAdminAccess;
  }

  public NodePolicy canComment(Boolean canComment) {
    this.canComment = canComment;
    return this;
  }

   /**
   * Get canComment
   * @return canComment
  **/
  @Schema(description = "")
  public Boolean isCanComment() {
    return canComment;
  }

  public void setCanComment(Boolean canComment) {
    this.canComment = canComment;
  }

  public NodePolicy canTag(Boolean canTag) {
    this.canTag = canTag;
    return this;
  }

   /**
   * Get canTag
   * @return canTag
  **/
  @Schema(description = "")
  public Boolean isCanTag() {
    return canTag;
  }

  public void setCanTag(Boolean canTag) {
    this.canTag = canTag;
  }

  public NodePolicy canI18n(Boolean canI18n) {
    this.canI18n = canI18n;
    return this;
  }

   /**
   * Get canI18n
   * @return canI18n
  **/
  @Schema(description = "")
  public Boolean isCanI18n() {
    return canI18n;
  }

  public void setCanI18n(Boolean canI18n) {
    this.canI18n = canI18n;
  }

  public NodePolicy canRevision(Boolean canRevision) {
    this.canRevision = canRevision;
    return this;
  }

   /**
   * Get canRevision
   * @return canRevision
  **/
  @Schema(description = "")
  public Boolean isCanRevision() {
    return canRevision;
  }

  public void setCanRevision(Boolean canRevision) {
    this.canRevision = canRevision;
  }

  public NodePolicy canWatch(Boolean canWatch) {
    this.canWatch = canWatch;
    return this;
  }

   /**
   * Get canWatch
   * @return canWatch
  **/
  @Schema(description = "")
  public Boolean isCanWatch() {
    return canWatch;
  }

  public void setCanWatch(Boolean canWatch) {
    this.canWatch = canWatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodePolicy nodePolicy = (NodePolicy) o;
    return Objects.equals(this.canListChildren, nodePolicy.canListChildren) &&
        Objects.equals(this.canAddChildren, nodePolicy.canAddChildren) &&
        Objects.equals(this.canMoveWithinBox, nodePolicy.canMoveWithinBox) &&
        Objects.equals(this.canMoveOutOfBox, nodePolicy.canMoveOutOfBox) &&
        Objects.equals(this.canDelete, nodePolicy.canDelete) &&
        Objects.equals(this.canPurge, nodePolicy.canPurge) &&
        Objects.equals(this.canRevert, nodePolicy.canRevert) &&
        Objects.equals(this.canDownload, nodePolicy.canDownload) &&
        Objects.equals(this.canDirectDownload, nodePolicy.canDirectDownload) &&
        Objects.equals(this.canAnalyze, nodePolicy.canAnalyze) &&
        Objects.equals(this.canSign, nodePolicy.canSign) &&
        Objects.equals(this.canReadNodeInfo, nodePolicy.canReadNodeInfo) &&
        Objects.equals(this.canRename, nodePolicy.canRename) &&
        Objects.equals(this.canAdminAccess, nodePolicy.canAdminAccess) &&
        Objects.equals(this.canComment, nodePolicy.canComment) &&
        Objects.equals(this.canTag, nodePolicy.canTag) &&
        Objects.equals(this.canI18n, nodePolicy.canI18n) &&
        Objects.equals(this.canRevision, nodePolicy.canRevision) &&
        Objects.equals(this.canWatch, nodePolicy.canWatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canListChildren, canAddChildren, canMoveWithinBox, canMoveOutOfBox, canDelete, canPurge, canRevert, canDownload, canDirectDownload, canAnalyze, canSign, canReadNodeInfo, canRename, canAdminAccess, canComment, canTag, canI18n, canRevision, canWatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodePolicy {\n");
    
    sb.append("    canListChildren: ").append(toIndentedString(canListChildren)).append("\n");
    sb.append("    canAddChildren: ").append(toIndentedString(canAddChildren)).append("\n");
    sb.append("    canMoveWithinBox: ").append(toIndentedString(canMoveWithinBox)).append("\n");
    sb.append("    canMoveOutOfBox: ").append(toIndentedString(canMoveOutOfBox)).append("\n");
    sb.append("    canDelete: ").append(toIndentedString(canDelete)).append("\n");
    sb.append("    canPurge: ").append(toIndentedString(canPurge)).append("\n");
    sb.append("    canRevert: ").append(toIndentedString(canRevert)).append("\n");
    sb.append("    canDownload: ").append(toIndentedString(canDownload)).append("\n");
    sb.append("    canDirectDownload: ").append(toIndentedString(canDirectDownload)).append("\n");
    sb.append("    canAnalyze: ").append(toIndentedString(canAnalyze)).append("\n");
    sb.append("    canSign: ").append(toIndentedString(canSign)).append("\n");
    sb.append("    canReadNodeInfo: ").append(toIndentedString(canReadNodeInfo)).append("\n");
    sb.append("    canRename: ").append(toIndentedString(canRename)).append("\n");
    sb.append("    canAdminAccess: ").append(toIndentedString(canAdminAccess)).append("\n");
    sb.append("    canComment: ").append(toIndentedString(canComment)).append("\n");
    sb.append("    canTag: ").append(toIndentedString(canTag)).append("\n");
    sb.append("    canI18n: ").append(toIndentedString(canI18n)).append("\n");
    sb.append("    canRevision: ").append(toIndentedString(canRevision)).append("\n");
    sb.append("    canWatch: ").append(toIndentedString(canWatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
