/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Only available with list content (NodeContent.path)
 */
@Schema(description = "Only available with list content (NodeContent.path)")


public class NodeWatch {
  @JsonProperty("watchId")
  private String watchId = null;

  @JsonProperty("recursive")
  private Boolean recursive = null;

  public NodeWatch watchId(String watchId) {
    this.watchId = watchId;
    return this;
  }

   /**
   * Get watchId
   * @return watchId
  **/
  @Schema(description = "")
  public String getWatchId() {
    return watchId;
  }

  public void setWatchId(String watchId) {
    this.watchId = watchId;
  }

  public NodeWatch recursive(Boolean recursive) {
    this.recursive = recursive;
    return this;
  }

   /**
   * Get recursive
   * @return recursive
  **/
  @Schema(description = "")
  public Boolean isRecursive() {
    return recursive;
  }

  public void setRecursive(Boolean recursive) {
    this.recursive = recursive;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeWatch nodeWatch = (NodeWatch) o;
    return Objects.equals(this.watchId, nodeWatch.watchId) &&
        Objects.equals(this.recursive, nodeWatch.recursive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(watchId, recursive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeWatch {\n");
    
    sb.append("    watchId: ").append(toIndentedString(watchId)).append("\n");
    sb.append("    recursive: ").append(toIndentedString(recursive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
