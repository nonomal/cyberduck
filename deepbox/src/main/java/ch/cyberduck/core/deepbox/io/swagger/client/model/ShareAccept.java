/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.deepbox.io.swagger.client.model.TransformToUser;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * ShareAccept
 */



public class ShareAccept {
  @JsonProperty("companyId")
  private String companyId = null;

  @JsonProperty("transformToUser")
  private TransformToUser transformToUser = null;

  @JsonProperty("accessOwnerUserId")
  private String accessOwnerUserId = null;

  @JsonProperty("createInitialWatch")
  private Boolean createInitialWatch = null;

  public ShareAccept companyId(String companyId) {
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @Schema(required = true, description = "")
  public String getCompanyId() {
    return companyId;
  }

  public void setCompanyId(String companyId) {
    this.companyId = companyId;
  }

  public ShareAccept transformToUser(TransformToUser transformToUser) {
    this.transformToUser = transformToUser;
    return this;
  }

   /**
   * Get transformToUser
   * @return transformToUser
  **/
  @Schema(required = true, description = "")
  public TransformToUser getTransformToUser() {
    return transformToUser;
  }

  public void setTransformToUser(TransformToUser transformToUser) {
    this.transformToUser = transformToUser;
  }

  public ShareAccept accessOwnerUserId(String accessOwnerUserId) {
    this.accessOwnerUserId = accessOwnerUserId;
    return this;
  }

   /**
   * Get accessOwnerUserId
   * @return accessOwnerUserId
  **/
  @Schema(required = true, description = "")
  public String getAccessOwnerUserId() {
    return accessOwnerUserId;
  }

  public void setAccessOwnerUserId(String accessOwnerUserId) {
    this.accessOwnerUserId = accessOwnerUserId;
  }

  public ShareAccept createInitialWatch(Boolean createInitialWatch) {
    this.createInitialWatch = createInitialWatch;
    return this;
  }

   /**
   * Get createInitialWatch
   * @return createInitialWatch
  **/
  @Schema(description = "")
  public Boolean isCreateInitialWatch() {
    return createInitialWatch;
  }

  public void setCreateInitialWatch(Boolean createInitialWatch) {
    this.createInitialWatch = createInitialWatch;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareAccept shareAccept = (ShareAccept) o;
    return Objects.equals(this.companyId, shareAccept.companyId) &&
        Objects.equals(this.transformToUser, shareAccept.transformToUser) &&
        Objects.equals(this.accessOwnerUserId, shareAccept.accessOwnerUserId) &&
        Objects.equals(this.createInitialWatch, shareAccept.createInitialWatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, transformToUser, accessOwnerUserId, createInitialWatch);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareAccept {\n");
    
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    transformToUser: ").append(toIndentedString(transformToUser)).append("\n");
    sb.append("    accessOwnerUserId: ").append(toIndentedString(accessOwnerUserId)).append("\n");
    sb.append("    createInitialWatch: ").append(toIndentedString(createInitialWatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
