/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import org.joda.time.DateTime;
/**
 * ShareLinkResource
 */



public class ShareLinkResource {
  @JsonProperty("filename")
  private String filename = null;

  @JsonProperty("mimeType")
  private String mimeType = null;

  @JsonProperty("size")
  private Long size = null;

  @JsonProperty("expiryTime")
  private DateTime expiryTime = null;

  @JsonProperty("shareUrl")
  private String shareUrl = null;

  @JsonProperty("resourceUrl")
  private String resourceUrl = null;

  @JsonProperty("thumbnailUrl")
  private String thumbnailUrl = null;

  public ShareLinkResource filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * Get filename
   * @return filename
  **/
  @Schema(description = "")
  public String getFilename() {
    return filename;
  }

  public void setFilename(String filename) {
    this.filename = filename;
  }

  public ShareLinkResource mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * Get mimeType
   * @return mimeType
  **/
  @Schema(description = "")
  public String getMimeType() {
    return mimeType;
  }

  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }

  public ShareLinkResource size(Long size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @Schema(description = "")
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }

  public ShareLinkResource expiryTime(DateTime expiryTime) {
    this.expiryTime = expiryTime;
    return this;
  }

   /**
   * Get expiryTime
   * @return expiryTime
  **/
  @Schema(description = "")
  public DateTime getExpiryTime() {
    return expiryTime;
  }

  public void setExpiryTime(DateTime expiryTime) {
    this.expiryTime = expiryTime;
  }

  public ShareLinkResource shareUrl(String shareUrl) {
    this.shareUrl = shareUrl;
    return this;
  }

   /**
   * Get shareUrl
   * @return shareUrl
  **/
  @Schema(description = "")
  public String getShareUrl() {
    return shareUrl;
  }

  public void setShareUrl(String shareUrl) {
    this.shareUrl = shareUrl;
  }

  public ShareLinkResource resourceUrl(String resourceUrl) {
    this.resourceUrl = resourceUrl;
    return this;
  }

   /**
   * Get resourceUrl
   * @return resourceUrl
  **/
  @Schema(description = "")
  public String getResourceUrl() {
    return resourceUrl;
  }

  public void setResourceUrl(String resourceUrl) {
    this.resourceUrl = resourceUrl;
  }

  public ShareLinkResource thumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

   /**
   * Get thumbnailUrl
   * @return thumbnailUrl
  **/
  @Schema(description = "")
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShareLinkResource shareLinkResource = (ShareLinkResource) o;
    return Objects.equals(this.filename, shareLinkResource.filename) &&
        Objects.equals(this.mimeType, shareLinkResource.mimeType) &&
        Objects.equals(this.size, shareLinkResource.size) &&
        Objects.equals(this.expiryTime, shareLinkResource.expiryTime) &&
        Objects.equals(this.shareUrl, shareLinkResource.shareUrl) &&
        Objects.equals(this.resourceUrl, shareLinkResource.resourceUrl) &&
        Objects.equals(this.thumbnailUrl, shareLinkResource.thumbnailUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filename, mimeType, size, expiryTime, shareUrl, resourceUrl, thumbnailUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShareLinkResource {\n");
    
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    expiryTime: ").append(toIndentedString(expiryTime)).append("\n");
    sb.append("    shareUrl: ").append(toIndentedString(shareUrl)).append("\n");
    sb.append("    resourceUrl: ").append(toIndentedString(resourceUrl)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
