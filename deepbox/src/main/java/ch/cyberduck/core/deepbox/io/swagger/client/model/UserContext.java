/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * UserContext
 */



public class UserContext {
  @JsonProperty("displayName")
  private String displayName = null;

  @JsonProperty("me")
  private Boolean me = null;

  @JsonProperty("initials")
  private String initials = null;

  /**
   * Gets or Sets subjectType
   */
  public enum SubjectTypeEnum {
    USER("user"),
    UNIT("unit"),
    COMPANY("company");

    private String value;

    SubjectTypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static SubjectTypeEnum fromValue(String input) {
      for (SubjectTypeEnum b : SubjectTypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("subjectType")
  private SubjectTypeEnum subjectType = null;

  @JsonProperty("hue")
  private Integer hue = null;

  @JsonProperty("id")
  private String id = null;

  public UserContext displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @Schema(description = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public UserContext me(Boolean me) {
    this.me = me;
    return this;
  }

   /**
   * Get me
   * @return me
  **/
  @Schema(description = "")
  public Boolean isMe() {
    return me;
  }

  public void setMe(Boolean me) {
    this.me = me;
  }

  public UserContext initials(String initials) {
    this.initials = initials;
    return this;
  }

   /**
   * Get initials
   * @return initials
  **/
  @Schema(description = "")
  public String getInitials() {
    return initials;
  }

  public void setInitials(String initials) {
    this.initials = initials;
  }

  public UserContext subjectType(SubjectTypeEnum subjectType) {
    this.subjectType = subjectType;
    return this;
  }

   /**
   * Get subjectType
   * @return subjectType
  **/
  @Schema(description = "")
  public SubjectTypeEnum getSubjectType() {
    return subjectType;
  }

  public void setSubjectType(SubjectTypeEnum subjectType) {
    this.subjectType = subjectType;
  }

  public UserContext hue(Integer hue) {
    this.hue = hue;
    return this;
  }

   /**
   * Get hue
   * @return hue
  **/
  @Schema(description = "")
  public Integer getHue() {
    return hue;
  }

  public void setHue(Integer hue) {
    this.hue = hue;
  }

  public UserContext id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserContext userContext = (UserContext) o;
    return Objects.equals(this.displayName, userContext.displayName) &&
        Objects.equals(this.me, userContext.me) &&
        Objects.equals(this.initials, userContext.initials) &&
        Objects.equals(this.subjectType, userContext.subjectType) &&
        Objects.equals(this.hue, userContext.hue) &&
        Objects.equals(this.id, userContext.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, me, initials, subjectType, hue, id);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserContext {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    me: ").append(toIndentedString(me)).append("\n");
    sb.append("    initials: ").append(toIndentedString(initials)).append("\n");
    sb.append("    subjectType: ").append(toIndentedString(subjectType)).append("\n");
    sb.append("    hue: ").append(toIndentedString(hue)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
