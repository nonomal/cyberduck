/*
 * DeepBox
 * DeepBox API Documentation
 *
 * OpenAPI spec version: 1.0
 * Contact: info@deepcloud.swiss
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.deepbox.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * WebhookAdd
 */



public class WebhookAdd {
  /**
   * Gets or Sets eventTypes
   */
  public enum EventTypesEnum {
    FILES_ADDED("files-added"),
    FILES_REMOVED("files-removed"),
    FOLDERS_ADDED("folders-added"),
    FOLDERS_REMOVED("folders-removed");

    private String value;

    EventTypesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static EventTypesEnum fromValue(String input) {
      for (EventTypesEnum b : EventTypesEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("eventTypes")
  private List<EventTypesEnum> eventTypes = new ArrayList<>();

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("secret")
  private String secret = null;

  @JsonProperty("withDetails")
  private Boolean withDetails = null;

  @JsonProperty("recursive")
  private Boolean recursive = null;

  public WebhookAdd eventTypes(List<EventTypesEnum> eventTypes) {
    this.eventTypes = eventTypes;
    return this;
  }

  public WebhookAdd addEventTypesItem(EventTypesEnum eventTypesItem) {
    this.eventTypes.add(eventTypesItem);
    return this;
  }

   /**
   * Get eventTypes
   * @return eventTypes
  **/
  @Schema(required = true, description = "")
  public List<EventTypesEnum> getEventTypes() {
    return eventTypes;
  }

  public void setEventTypes(List<EventTypesEnum> eventTypes) {
    this.eventTypes = eventTypes;
  }

  public WebhookAdd url(String url) {
    this.url = url;
    return this;
  }

   /**
   * POST webhook url. For body see schema WebhookInfo
   * @return url
  **/
  @Schema(example = "https://myserver.com/my/lovely/webhook", required = true, description = "POST webhook url. For body see schema WebhookInfo")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public WebhookAdd secret(String secret) {
    this.secret = secret;
    return this;
  }

   /**
   * Secret to calculate auth signature of the body (SHA-256 HMAC). Sent in header as X-DeepBox-Signature-256
   * @return secret
  **/
  @Schema(description = "Secret to calculate auth signature of the body (SHA-256 HMAC). Sent in header as X-DeepBox-Signature-256")
  public String getSecret() {
    return secret;
  }

  public void setSecret(String secret) {
    this.secret = secret;
  }

  public WebhookAdd withDetails(Boolean withDetails) {
    this.withDetails = withDetails;
    return this;
  }

   /**
   * true -&gt; include node details (see WebhookInfo.Event.details)
   * @return withDetails
  **/
  @Schema(example = "false", description = "true -> include node details (see WebhookInfo.Event.details)")
  public Boolean isWithDetails() {
    return withDetails;
  }

  public void setWithDetails(Boolean withDetails) {
    this.withDetails = withDetails;
  }

  public WebhookAdd recursive(Boolean recursive) {
    this.recursive = recursive;
    return this;
  }

   /**
   * true -&gt; call also for changes in any subfolder
   * @return recursive
  **/
  @Schema(example = "false", description = "true -> call also for changes in any subfolder")
  public Boolean isRecursive() {
    return recursive;
  }

  public void setRecursive(Boolean recursive) {
    this.recursive = recursive;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebhookAdd webhookAdd = (WebhookAdd) o;
    return Objects.equals(this.eventTypes, webhookAdd.eventTypes) &&
        Objects.equals(this.url, webhookAdd.url) &&
        Objects.equals(this.secret, webhookAdd.secret) &&
        Objects.equals(this.withDetails, webhookAdd.withDetails) &&
        Objects.equals(this.recursive, webhookAdd.recursive);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventTypes, url, secret, withDetails, recursive);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebhookAdd {\n");
    
    sb.append("    eventTypes: ").append(toIndentedString(eventTypes)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    withDetails: ").append(toIndentedString(withDetails)).append("\n");
    sb.append("    recursive: ").append(toIndentedString(recursive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
