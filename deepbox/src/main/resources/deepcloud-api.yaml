openapi: 3.0.3
info:
  title: DeepAdmin API
  version: 1.0.0
  description: General API for DeepCloud Admin / Subscription Service
  contact:
    name: Arcanite / Deepcloud
    email: support@deepcloud.swiss
paths:
  /api/v1/users/me:
    get:
      operationId: users_me_list
      description: |-
        Endpoint to get the user details (name, email, ...), linked companies and units.

        As a service, you can use the parameter `asSubjectId` to get other data on other objects using their UUID:
        - On users, to get the same info as they would get by calling this API.
        - On pending users, to get the companies that they are invited to and any available data.
        - On companies, to get information about the company (name, address, structure, ...)
        - On units, to get information about the unit (name, parent, address, ...)

        Note: This feature (using this API to get info on subjects instead of on its own user) is not recommended.
        For almost any case, it is better to use the specific APIs that are specialized for this use.
        Example: using `/api/v1/users/{id}` instead of `/api/v1/users/me?asSubjectId={id}`.

        **Caching Support**

        Supports server-side caching via `cache-control` header:

        *Cache-Control Directives:*
        - `max-age`: Cache duration in seconds, e.g. 'max-age=10'. 'max-age=0' disables caching. Limited to 30 seconds.
        - `no-store`: Prevents caching and removes existing cache entries.
        - `no-cache`: Refreshes and stores the updated response.

        *Cache Key Composition:*
        - Request URL, query parameters, and a cache-id (default is the trace-id from the `sentry-trace` header).
        - If no Sentry trace-id is provided, the jwt `subject` will be used.
        - Optional: Custom cache-id via `x-cache-id` directive, e.g. 'x-cache-id=<valid-uuid>' (must be a UUID).
        - Optional: Enforce jwt subject usage with `x-use-subject` directive.

        *Cache Status in Response Headers:*
        - `X-Cache: HIT`: Loaded from cache.
        - `X-Cache: MISS`: Not cached or cache expired.

        *Cache-Control Header Example:*
        - Cache for 10 seconds: `cache-control: max-age=10`
        - Custom cache-id: `cache-control: max-age=10, x-cache-id=<uuid>`
      tags:
        - users
      security:
        - JWTTokenAuthentication:
            - user.read
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFull'
              examples:
                DefaultUse:
                  value:
                    count: 123
                    next: http://api.example.org/accounts/?page=4
                    previous: http://api.example.org/accounts/?page=2
                    results:
                      - email: user@email.com
                        firstname: John Joseph
                        lastname: Doe
                        id: 1102eff5-f089-4d48-a62d-b0e0d364c919
                        groups: [ ]
                        companies:
                          - group_id: 0f90d5fe-18d7-49c7-995e-3eef18a0e4c9
                            name: cace0dd3-8d5b-45c2-b133-34c99c2ed1e9@automatic.onboarding.deepbox.swiss
                            display_name: My Company
                            default_address:
                              id: 1
                              street: Train Station Street 1
                              street2: null
                              city: City
                              zipcode: '1000'
                              country: CH
                              plus_code: null
                              phone: '+41791234567'
                              email: company@email.com
                              address_display: Train Station Street 1 (1000 City)
                              is_user_main: false
                            metadata: { }
                            logo: null
                            roles:
                              - ORDER_SUB
                              - VIEW_COMPANY
                              - MANAGE_SUB_ACCESS
                              - MANAGE_BOXES
                              - MANAGE_COMPANY
                              - VIEW_TOKEN
                              - MANAGE_MEMBERS
                            structure: soleproprietorship
                            verification_state: weak
                            verification_process_status: in_progress
                        units: [ ]
                        pending: false
                        pending_invitations: [ ]
                        lang: fr-ch
                        display_name: John Doe
                  summary: default use
          description: ''
components:
  schemas:
    UserFull:
      type: object
      properties:
        email:
          type: string
          format: email
        firstname:
          type: string
        lastname:
          type: string
        id:
          type: string
          format: uuid
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupRoles'
          readOnly: true
        companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyRoles'
          readOnly: true
        units:
          type: array
          items:
            $ref: '#/components/schemas/UnitRoles'
          readOnly: true
        pending:
          type: boolean
          readOnly: true
        pending_invitations:
          type: array
          items:
            $ref: '#/components/schemas/Invitation'
          readOnly: true
        lang:
          type: string
          readOnly: true
        display_name:
          type: string
          readOnly: true
      required:
        - companies
        - display_name
        - email
        - groups
        - id
        - lang
        - pending
        - pending_invitations
        - units
    GroupRoles:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        display_name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1024
        metadata: { }
        roles:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - created_at
        - display_name
        - group_id
        - roles
    CompanyRoles:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        default_address:
          $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        roles:
          type: array
          items:
            type: string
          readOnly: true
        verification_state:
          $ref: '#/components/schemas/VerificationStateEnum'
          description: Get the current validation status
          readOnly: true
        verification_process_status:
          $ref: '#/components/schemas/VerificationProcessStatusEnum'
          description: Get the current validation status
          readOnly: true
        structure:
          nullable: true
          description: |-
            Structure of the company

            * `nobox` - No box
            * `unregistered` - Unregistered
            * `personal` - Personal
            * `soleproprietorship` - Sole Proprietorship
            * `generalpartnership` - General Partnership
            * `limitedpartnership` - Limited Partnership
            * `limited` - Limited Company
            * `limitedliability` - Limited Liability Company
            * `cooperative` - Cooperative Company
            * `association` - Association
            * `foundation` - Foundation
            * `partnershiplimitedbyshares` - Partnership Limited by Shares
            * `bodycorporate` - Body Corporate
            * `publicinstitution` - Public Institution
            * `ownershipundividedshares` - Ownership In Undivided Shares
            * `institute` - Institute
            * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
            * `publiccooperative` - Public Cooperative
            * `other` - Other
          $ref: '#/components/schemas/StructureEnum'
      required:
        - default_address
        - display_name
        - group_id
        - metadata
        - name
        - roles
        - verification_process_status
        - verification_state
    StructureEnum:
      enum:
        - nobox
        - unregistered
        - personal
        - soleproprietorship
        - generalpartnership
        - limitedpartnership
        - limited
        - limitedliability
        - cooperative
        - association
        - foundation
        - partnershiplimitedbyshares
        - bodycorporate
        - publicinstitution
        - ownershipundividedshares
        - institute
        - publiccorporationlimitedshares
        - publiccooperative
        - other
      type: string
      description: |-
        * `nobox` - No box
        * `unregistered` - Unregistered
        * `personal` - Personal
        * `soleproprietorship` - Sole Proprietorship
        * `generalpartnership` - General Partnership
        * `limitedpartnership` - Limited Partnership
        * `limited` - Limited Company
        * `limitedliability` - Limited Liability Company
        * `cooperative` - Cooperative Company
        * `association` - Association
        * `foundation` - Foundation
        * `partnershiplimitedbyshares` - Partnership Limited by Shares
        * `bodycorporate` - Body Corporate
        * `publicinstitution` - Public Institution
        * `ownershipundividedshares` - Ownership In Undivided Shares
        * `institute` - Institute
        * `publiccorporationlimitedshares` - Public Corporation Limited by Shares
        * `publiccooperative` - Public Cooperative
        * `other` - Other
    BlankEnum:
      enum:
        - ''
    NullEnum:
      enum:
        - null
    UnitRoles:
      type: object
      description: |-
        Simple Unit Serializer with no tree/children/parent crawling capabilities
        To be extended for use in more specialized actions
      properties:
        group_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          format: email
          title: Reference
          description: A unique email address (which could not exist) to reference
            this entity
          maxLength: 255
        display_name:
          type: string
          maxLength: 255
        default_address:
          $ref: '#/components/schemas/Address'
          readOnly: true
        metadata:
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: For reading, it returns the URL. For writing you need to provide
            the image base64 encoded, like "data:image/png;base64,<BASE64_DATA>".
        roles:
          type: array
          items:
            type: string
          readOnly: true
      required:
        - default_address
        - display_name
        - group_id
        - metadata
        - roles
    Address:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          nullable: true
          title: Street and number
          maxLength: 256
        street2:
          type: string
          nullable: true
          title: Additional address info (p.o. box, building,...)
          maxLength: 256
        city:
          type: string
          nullable: true
          maxLength: 100
        zipcode:
          type: string
          nullable: true
          title: Postal code
          maxLength: 32
        country:
          $ref: '#/components/schemas/CountryEnum'
        plus_code:
          type: string
          nullable: true
          maxLength: 12
        phone:
          type: string
          nullable: true
          title: Phone number
          maxLength: 128
        email:
          type: string
          format: email
          nullable: true
          title: E-Mail
          maxLength: 254
        preferred_language:
          type: string
          title: Language used in emails
          description: 2, 3 or 5 characters as specified in ISO 639
          maxLength: 5
        address_display:
          type: string
          readOnly: true
        is_user_main:
          type: boolean
          title: Is the main address?
      required:
        - address_display
        - country
        - id
    CountryEnum:
      enum:
        - CH
        - DE
        - FR
        - IT
        - AT
        - LI
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - CV
        - KH
        - CM
        - CA
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - SZ
        - ET
        - FK
        - FO
        - FJ
        - FI
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LT
        - LU
        - MO
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - KP
        - MK
        - MP
        - 'NO'
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - KR
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SE
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - UM
        - US
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
      type: string
      description: |-
        * `CH` - Switzerland
        * `DE` - Germany
        * `FR` - France
        * `IT` - Italy
        * `AT` - Austria
        * `LI` - Liechtenstein
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia (Federated States of)
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Türkiye
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `GB` - United Kingdom
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    Invitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/InvitationCategoryEnum'
          description: |-
            The type of invitation. "Email" should be used to invite a user based on its email (an email will be sent). "Domain" creates an invitation that can be used by any user whose the domain part of the email matches.

            * `ANONYMOUS` - Anonymous
            * `DOMAIN` - Domain
            * `EMAIL` - E-Mail
        recipient:
          type: string
          nullable: true
          description: 'Recipient should correspond to the chosen category. Eg.: "john@mycompany.ch"
            for email, "mycompany.ch" for domain. Can be left blank for anonymous.'
          maxLength: 255
        expiry_date:
          type: string
          format: date-time
        max_uses:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum usage
        current_uses:
          type: integer
          readOnly: true
        creator_id:
          type: integer
          nullable: true
          readOnly: true
        is_valid:
          type: boolean
          readOnly: true
        link:
          type: string
          readOnly: true
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/InvitationPermission'
          readOnly: true
        shadow_user:
          type: string
          format: uuid
          readOnly: true
      required:
        - category
        - creator_id
        - current_uses
        - id
        - is_valid
        - link
        - permissions
        - shadow_user
    InvitationCategoryEnum:
      enum:
        - ANONYMOUS
        - DOMAIN
        - EMAIL
      type: string
      description: |-
        * `ANONYMOUS` - Anonymous
        * `DOMAIN` - Domain
        * `EMAIL` - E-Mail
    InvitationPermission:
      type: object
      properties:
        group_id:
          type: string
          format: uuid
        role:
          type: integer
          nullable: true
      required:
        - group_id
    VerificationStateEnum:
      enum:
        - strong
        - weak
        - none
      type: string
    VerificationProcessStatusEnum:
      enum:
        - in_progress
        - started
      type: string
