/*
 * DRACOON API
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * OpenAPI spec version: 4.45.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Room Polices
 */
@Schema(description = "Room Polices")

public class RoomPolicies {
  @JsonProperty("defaultExpirationPeriod")
  private Integer defaultExpirationPeriod = null;

  @JsonProperty("isVirusProtectionEnabled")
  private Boolean isVirusProtectionEnabled = null;

  public RoomPolicies defaultExpirationPeriod(Integer defaultExpirationPeriod) {
    this.defaultExpirationPeriod = defaultExpirationPeriod;
    return this;
  }

   /**
   * Default policy room expiration period in seconds.  All files in a room will have their expiration date set to this period after their respective upload.   0 means no default expiration policy is set.
   * @return defaultExpirationPeriod
  **/
  @Schema(required = true, description = "Default policy room expiration period in seconds.  All files in a room will have their expiration date set to this period after their respective upload.   0 means no default expiration policy is set.")
  public Integer getDefaultExpirationPeriod() {
    return defaultExpirationPeriod;
  }

  public void setDefaultExpirationPeriod(Integer defaultExpirationPeriod) {
    this.defaultExpirationPeriod = defaultExpirationPeriod;
  }

  public RoomPolicies isVirusProtectionEnabled(Boolean isVirusProtectionEnabled) {
    this.isVirusProtectionEnabled = isVirusProtectionEnabled;
    return this;
  }

   /**
   * Determines whether virus protection is enabled for room. To be set by room admins
   * @return isVirusProtectionEnabled
  **/
  @Schema(required = true, description = "Determines whether virus protection is enabled for room. To be set by room admins")
  public Boolean isIsVirusProtectionEnabled() {
    return isVirusProtectionEnabled;
  }

  public void setIsVirusProtectionEnabled(Boolean isVirusProtectionEnabled) {
    this.isVirusProtectionEnabled = isVirusProtectionEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoomPolicies roomPolicies = (RoomPolicies) o;
    return Objects.equals(this.defaultExpirationPeriod, roomPolicies.defaultExpirationPeriod) &&
        Objects.equals(this.isVirusProtectionEnabled, roomPolicies.isVirusProtectionEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultExpirationPeriod, isVirusProtectionEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoomPolicies {\n");
    
    sb.append("    defaultExpirationPeriod: ").append(toIndentedString(defaultExpirationPeriod)).append("\n");
    sb.append("    isVirusProtectionEnabled: ").append(toIndentedString(isVirusProtectionEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
