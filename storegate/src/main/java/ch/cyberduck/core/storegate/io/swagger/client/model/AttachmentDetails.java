/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class AttachmentDetails {
  @JsonProperty("attachmentType")
  private String attachmentType = null;

  @JsonProperty("contentType")
  private String contentType = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("isInline")
  private Boolean isInline = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("size")
  private Integer size = null;

  public AttachmentDetails attachmentType(String attachmentType) {
    this.attachmentType = attachmentType;
    return this;
  }

   /**
   * 
   * @return attachmentType
  **/
  @ApiModelProperty(value = "")
  public String getAttachmentType() {
    return attachmentType;
  }

  public void setAttachmentType(String attachmentType) {
    this.attachmentType = attachmentType;
  }

  public AttachmentDetails contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

   /**
   * 
   * @return contentType
  **/
  @ApiModelProperty(value = "")
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }

  public AttachmentDetails id(String id) {
    this.id = id;
    return this;
  }

   /**
   * 
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AttachmentDetails isInline(Boolean isInline) {
    this.isInline = isInline;
    return this;
  }

   /**
   * 
   * @return isInline
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsInline() {
    return isInline;
  }

  public void setIsInline(Boolean isInline) {
    this.isInline = isInline;
  }

  public AttachmentDetails name(String name) {
    this.name = name;
    return this;
  }

   /**
   * 
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AttachmentDetails size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * 
   * @return size
  **/
  @ApiModelProperty(value = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachmentDetails attachmentDetails = (AttachmentDetails) o;
    return Objects.equals(this.attachmentType, attachmentDetails.attachmentType) &&
        Objects.equals(this.contentType, attachmentDetails.contentType) &&
        Objects.equals(this.id, attachmentDetails.id) &&
        Objects.equals(this.isInline, attachmentDetails.isInline) &&
        Objects.equals(this.name, attachmentDetails.name) &&
        Objects.equals(this.size, attachmentDetails.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentType, contentType, id, isInline, name, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachmentDetails {\n");
    
    sb.append("    attachmentType: ").append(toIndentedString(attachmentType)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isInline: ").append(toIndentedString(isInline)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

