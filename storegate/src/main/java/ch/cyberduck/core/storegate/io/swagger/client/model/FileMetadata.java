/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;

/**
 * A file metadata object
 */
@ApiModel(description = "A file metadata object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class FileMetadata {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("fileName")
  private String fileName = null;

  @JsonProperty("parentId")
  private String parentId = null;

  @JsonProperty("fileSize")
  private Long fileSize = null;

  @JsonProperty("modified")
  private DateTime modified = null;

  @JsonProperty("created")
  private DateTime created = null;

  @JsonProperty("accessed")
  private DateTime accessed = null;

  @JsonProperty("attributes")
  private Integer attributes = null;

  @JsonProperty("conflictHandling")
  private Integer conflictHandling = null;

  @JsonProperty("flags")
  private Integer flags = null;

  @JsonProperty("lockId")
  private String lockId = null;

  public FileMetadata id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The file id
   * @return id
  **/
  @ApiModelProperty(value = "The file id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FileMetadata fileName(String fileName) {
    this.fileName = fileName;
    return this;
  }

   /**
   * The file name
   * @return fileName
  **/
  @ApiModelProperty(value = "The file name")
  public String getFileName() {
    return fileName;
  }

  public void setFileName(String fileName) {
    this.fileName = fileName;
  }

  public FileMetadata parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * The file&#39;s parent folder id
   * @return parentId
  **/
  @ApiModelProperty(value = "The file's parent folder id")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }

  public FileMetadata fileSize(Long fileSize) {
    this.fileSize = fileSize;
    return this;
  }

   /**
   * The size
   * @return fileSize
  **/
  @ApiModelProperty(value = "The size")
  public Long getFileSize() {
    return fileSize;
  }

  public void setFileSize(Long fileSize) {
    this.fileSize = fileSize;
  }

  public FileMetadata modified(DateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * The file&#39;s modified datetime in UTC
   * @return modified
  **/
  @ApiModelProperty(value = "The file's modified datetime in UTC")
  public DateTime getModified() {
    return modified;
  }

  public void setModified(DateTime modified) {
    this.modified = modified;
  }

  public FileMetadata created(DateTime created) {
    this.created = created;
    return this;
  }

   /**
   * The file&#39;s created datetime in UTC
   * @return created
  **/
  @ApiModelProperty(value = "The file's created datetime in UTC")
  public DateTime getCreated() {
    return created;
  }

  public void setCreated(DateTime created) {
    this.created = created;
  }

  public FileMetadata accessed(DateTime accessed) {
    this.accessed = accessed;
    return this;
  }

   /**
   * The file&#39;s last access datetime in UTC
   * @return accessed
  **/
  @ApiModelProperty(value = "The file's last access datetime in UTC")
  public DateTime getAccessed() {
    return accessed;
  }

  public void setAccessed(DateTime accessed) {
    this.accessed = accessed;
  }

  public FileMetadata attributes(Integer attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * The file atributes
   * @return attributes
  **/
  @ApiModelProperty(value = "The file atributes")
  public Integer getAttributes() {
    return attributes;
  }

  public void setAttributes(Integer attributes) {
    this.attributes = attributes;
  }

  public FileMetadata conflictHandling(Integer conflictHandling) {
    this.conflictHandling = conflictHandling;
    return this;
  }

   /**
   * Optional ConflictJHandling, not used in share upload. (0 &#x3D; None, 1 &#x3D; Overwrite, 2 &#x3D; KeepBoth)
   * @return conflictHandling
  **/
  @ApiModelProperty(value = "Optional ConflictJHandling, not used in share upload. (0 = None, 1 = Overwrite, 2 = KeepBoth)")
  public Integer getConflictHandling() {
    return conflictHandling;
  }

  public void setConflictHandling(Integer conflictHandling) {
    this.conflictHandling = conflictHandling;
  }

  public FileMetadata flags(Integer flags) {
    this.flags = flags;
    return this;
  }

   /**
   * The file Flags (0 &#x3D; None, 1 &#x3D; Folder, 2 &#x3D; Shared, 4 &#x3D; Locked, 8 &#x3D; Image, 16 &#x3D; Streamable, 32 &#x3D; Video, 64 &#x3D; Doc, 128 &#x3D; StreamableDoc, 256 &#x3D; HasThumbnail, 512 &#x3D; Hidden, 1024 &#x3D; Favorite, 2048 &#x3D; HasNotification)
   * @return flags
  **/
  @ApiModelProperty(value = "The file Flags (0 = None, 1 = Folder, 2 = Shared, 4 = Locked, 8 = Image, 16 = Streamable, 32 = Video, 64 = Doc, 128 = StreamableDoc, 256 = HasThumbnail, 512 = Hidden, 1024 = Favorite, 2048 = HasNotification)")
  public Integer getFlags() {
    return flags;
  }

  public void setFlags(Integer flags) {
    this.flags = flags;
  }

  public FileMetadata lockId(String lockId) {
    this.lockId = lockId;
    return this;
  }

   /**
   * Not used any more
   * @return lockId
  **/
  @ApiModelProperty(value = "Not used any more")
  public String getLockId() {
    return lockId;
  }

  public void setLockId(String lockId) {
    this.lockId = lockId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileMetadata fileMetadata = (FileMetadata) o;
    return Objects.equals(this.id, fileMetadata.id) &&
        Objects.equals(this.fileName, fileMetadata.fileName) &&
        Objects.equals(this.parentId, fileMetadata.parentId) &&
        Objects.equals(this.fileSize, fileMetadata.fileSize) &&
        Objects.equals(this.modified, fileMetadata.modified) &&
        Objects.equals(this.created, fileMetadata.created) &&
        Objects.equals(this.accessed, fileMetadata.accessed) &&
        Objects.equals(this.attributes, fileMetadata.attributes) &&
        Objects.equals(this.conflictHandling, fileMetadata.conflictHandling) &&
        Objects.equals(this.flags, fileMetadata.flags) &&
        Objects.equals(this.lockId, fileMetadata.lockId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, fileName, parentId, fileSize, modified, created, accessed, attributes, conflictHandling, flags, lockId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileMetadata {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    fileSize: ").append(toIndentedString(fileSize)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    accessed: ").append(toIndentedString(accessed)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    conflictHandling: ").append(toIndentedString(conflictHandling)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    lockId: ").append(toIndentedString(lockId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

