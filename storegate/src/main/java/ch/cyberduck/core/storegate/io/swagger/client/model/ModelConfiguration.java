/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class ModelConfiguration {
  @JsonProperty("hasMulti")
  private Boolean hasMulti = null;

  @JsonProperty("hasCommon")
  private Boolean hasCommon = null;

  @JsonProperty("hasPermissions")
  private Boolean hasPermissions = null;

  @JsonProperty("hasExtendedPermissions")
  private Boolean hasExtendedPermissions = null;

  @JsonProperty("hasTeamSync")
  private Boolean hasTeamSync = null;

  @JsonProperty("hasGroups")
  private Boolean hasGroups = null;

  @JsonProperty("hasQuota")
  private Boolean hasQuota = null;

  @JsonProperty("hasInspection")
  private Boolean hasInspection = null;

  @JsonProperty("hasBackup")
  private Boolean hasBackup = null;

  @JsonProperty("hasUnlimitedBackup")
  private Boolean hasUnlimitedBackup = null;

  @JsonProperty("hasKlsBackup")
  private Boolean hasKlsBackup = null;

  @JsonProperty("hasMedia")
  private Boolean hasMedia = null;

  @JsonProperty("isMoveFromCommonDisabled")
  private Boolean isMoveFromCommonDisabled = null;

  @JsonProperty("hasPhotos")
  private Boolean hasPhotos = null;

  @JsonProperty("hasSync")
  private Boolean hasSync = null;

  @JsonProperty("hasAutostore")
  private Boolean hasAutostore = null;

  @JsonProperty("hasOfficeOnline")
  private Boolean hasOfficeOnline = null;

  @JsonProperty("hasOfficeDesktop")
  private Boolean hasOfficeDesktop = null;

  @JsonProperty("hidePermissionManagement")
  private Boolean hidePermissionManagement = null;

  @JsonProperty("hasRecycleBin")
  private Boolean hasRecycleBin = null;

  @JsonProperty("showHiddenFiles")
  private Boolean showHiddenFiles = null;

  @JsonProperty("showUsername")
  private Boolean showUsername = null;

  @JsonProperty("startPage")
  private String startPage = null;

  @JsonProperty("locale")
  private String locale = null;

  @JsonProperty("theme")
  private String theme = null;

  @JsonProperty("hideSplash")
  private Boolean hideSplash = null;

  @JsonProperty("userAccountMode")
  private Integer userAccountMode = null;

  @JsonProperty("allowShare")
  private Boolean allowShare = null;

  @JsonProperty("hasEvents")
  private Boolean hasEvents = null;

  @JsonProperty("hasVersioning")
  private Boolean hasVersioning = null;

  @JsonProperty("hasWebDav")
  private Boolean hasWebDav = null;

  @JsonProperty("hasWebDavPasswords")
  private Boolean hasWebDavPasswords = null;

  @JsonProperty("isShareBankIDAuthAvailable")
  private Boolean isShareBankIDAuthAvailable = null;

  @JsonProperty("hasShareBankIDAuth")
  private Boolean hasShareBankIDAuth = null;

  @JsonProperty("hasShareOfficeOnline")
  private Boolean hasShareOfficeOnline = null;

  @JsonProperty("hasMyFiles")
  private Boolean hasMyFiles = null;

  @JsonProperty("isBankIDLogin")
  private Boolean isBankIDLogin = null;

  @JsonProperty("hasApps")
  private Boolean hasApps = null;

  @JsonProperty("isBankIDVerificationRequired")
  private Boolean isBankIDVerificationRequired = null;

  @JsonProperty("isShareBankIDRequired")
  private Boolean isShareBankIDRequired = null;

  @JsonProperty("isTwoFactorLoginRequired")
  private Boolean isTwoFactorLoginRequired = null;

  @JsonProperty("hasBranding")
  private Boolean hasBranding = null;

  @JsonProperty("isBrandingAvailable")
  private Boolean isBrandingAvailable = null;

  @JsonProperty("hasPhoneBackup")
  private Boolean hasPhoneBackup = null;

  @JsonProperty("hasSigning")
  private Boolean hasSigning = null;

  @JsonProperty("isSigningAvailable")
  private Boolean isSigningAvailable = null;

  @JsonProperty("hasCloudFolder")
  private Boolean hasCloudFolder = null;

  @JsonProperty("isShareProtectionRequired")
  private Boolean isShareProtectionRequired = null;

  @JsonProperty("promptPWA")
  private Boolean promptPWA = null;

  public ModelConfiguration hasMulti(Boolean hasMulti) {
    this.hasMulti = hasMulti;
    return this;
  }

   /**
   * Does the account have Multi/Team
   * @return hasMulti
  **/
  @ApiModelProperty(value = "Does the account have Multi/Team")
  public Boolean isHasMulti() {
    return hasMulti;
  }

  public void setHasMulti(Boolean hasMulti) {
    this.hasMulti = hasMulti;
  }

  public ModelConfiguration hasCommon(Boolean hasCommon) {
    this.hasCommon = hasCommon;
    return this;
  }

   /**
   * Is Common enabled
   * @return hasCommon
  **/
  @ApiModelProperty(value = "Is Common enabled")
  public Boolean isHasCommon() {
    return hasCommon;
  }

  public void setHasCommon(Boolean hasCommon) {
    this.hasCommon = hasCommon;
  }

  public ModelConfiguration hasPermissions(Boolean hasPermissions) {
    this.hasPermissions = hasPermissions;
    return this;
  }

   /**
   * Is permissions enabled
   * @return hasPermissions
  **/
  @ApiModelProperty(value = "Is permissions enabled")
  public Boolean isHasPermissions() {
    return hasPermissions;
  }

  public void setHasPermissions(Boolean hasPermissions) {
    this.hasPermissions = hasPermissions;
  }

  public ModelConfiguration hasExtendedPermissions(Boolean hasExtendedPermissions) {
    this.hasExtendedPermissions = hasExtendedPermissions;
    return this;
  }

   /**
   * Is permissions pas first level in Common enabled
   * @return hasExtendedPermissions
  **/
  @ApiModelProperty(value = "Is permissions pas first level in Common enabled")
  public Boolean isHasExtendedPermissions() {
    return hasExtendedPermissions;
  }

  public void setHasExtendedPermissions(Boolean hasExtendedPermissions) {
    this.hasExtendedPermissions = hasExtendedPermissions;
  }

  public ModelConfiguration hasTeamSync(Boolean hasTeamSync) {
    this.hasTeamSync = hasTeamSync;
    return this;
  }

   /**
   * Is sync of the common folder allowed
   * @return hasTeamSync
  **/
  @ApiModelProperty(value = "Is sync of the common folder allowed")
  public Boolean isHasTeamSync() {
    return hasTeamSync;
  }

  public void setHasTeamSync(Boolean hasTeamSync) {
    this.hasTeamSync = hasTeamSync;
  }

  public ModelConfiguration hasGroups(Boolean hasGroups) {
    this.hasGroups = hasGroups;
    return this;
  }

   /**
   * Does the account have groups
   * @return hasGroups
  **/
  @ApiModelProperty(value = "Does the account have groups")
  public Boolean isHasGroups() {
    return hasGroups;
  }

  public void setHasGroups(Boolean hasGroups) {
    this.hasGroups = hasGroups;
  }

  public ModelConfiguration hasQuota(Boolean hasQuota) {
    this.hasQuota = hasQuota;
    return this;
  }

   /**
   * Can users hav a quota
   * @return hasQuota
  **/
  @ApiModelProperty(value = "Can users hav a quota")
  public Boolean isHasQuota() {
    return hasQuota;
  }

  public void setHasQuota(Boolean hasQuota) {
    this.hasQuota = hasQuota;
  }

  public ModelConfiguration hasInspection(Boolean hasInspection) {
    this.hasInspection = hasInspection;
    return this;
  }

   /**
   * Can admin inspect users
   * @return hasInspection
  **/
  @ApiModelProperty(value = "Can admin inspect users")
  public Boolean isHasInspection() {
    return hasInspection;
  }

  public void setHasInspection(Boolean hasInspection) {
    this.hasInspection = hasInspection;
  }

  public ModelConfiguration hasBackup(Boolean hasBackup) {
    this.hasBackup = hasBackup;
    return this;
  }

   /**
   * Does the account have Backup
   * @return hasBackup
  **/
  @ApiModelProperty(value = "Does the account have Backup")
  public Boolean isHasBackup() {
    return hasBackup;
  }

  public void setHasBackup(Boolean hasBackup) {
    this.hasBackup = hasBackup;
  }

  public ModelConfiguration hasUnlimitedBackup(Boolean hasUnlimitedBackup) {
    this.hasUnlimitedBackup = hasUnlimitedBackup;
    return this;
  }

   /**
   * Is it unlimited backup
   * @return hasUnlimitedBackup
  **/
  @ApiModelProperty(value = "Is it unlimited backup")
  public Boolean isHasUnlimitedBackup() {
    return hasUnlimitedBackup;
  }

  public void setHasUnlimitedBackup(Boolean hasUnlimitedBackup) {
    this.hasUnlimitedBackup = hasUnlimitedBackup;
  }

  public ModelConfiguration hasKlsBackup(Boolean hasKlsBackup) {
    this.hasKlsBackup = hasKlsBackup;
    return this;
  }

   /**
   * Is it KLS backup
   * @return hasKlsBackup
  **/
  @ApiModelProperty(value = "Is it KLS backup")
  public Boolean isHasKlsBackup() {
    return hasKlsBackup;
  }

  public void setHasKlsBackup(Boolean hasKlsBackup) {
    this.hasKlsBackup = hasKlsBackup;
  }

  public ModelConfiguration hasMedia(Boolean hasMedia) {
    this.hasMedia = hasMedia;
    return this;
  }

   /**
   * Does the account have Albums and Photos
   * @return hasMedia
  **/
  @ApiModelProperty(value = "Does the account have Albums and Photos")
  public Boolean isHasMedia() {
    return hasMedia;
  }

  public void setHasMedia(Boolean hasMedia) {
    this.hasMedia = hasMedia;
  }

  public ModelConfiguration isMoveFromCommonDisabled(Boolean isMoveFromCommonDisabled) {
    this.isMoveFromCommonDisabled = isMoveFromCommonDisabled;
    return this;
  }

   /**
   * Is moving files from Common disabled
   * @return isMoveFromCommonDisabled
  **/
  @ApiModelProperty(value = "Is moving files from Common disabled")
  public Boolean isIsMoveFromCommonDisabled() {
    return isMoveFromCommonDisabled;
  }

  public void setIsMoveFromCommonDisabled(Boolean isMoveFromCommonDisabled) {
    this.isMoveFromCommonDisabled = isMoveFromCommonDisabled;
  }

   /**
   * Not used, check HasMedia
   * @return hasPhotos
  **/
  @ApiModelProperty(value = "Not used, check HasMedia")
  public Boolean isHasPhotos() {
    return hasPhotos;
  }

  public ModelConfiguration hasSync(Boolean hasSync) {
    this.hasSync = hasSync;
    return this;
  }

   /**
   * Does the accont have Sync
   * @return hasSync
  **/
  @ApiModelProperty(value = "Does the accont have Sync")
  public Boolean isHasSync() {
    return hasSync;
  }

  public void setHasSync(Boolean hasSync) {
    this.hasSync = hasSync;
  }

  public ModelConfiguration hasAutostore(Boolean hasAutostore) {
    this.hasAutostore = hasAutostore;
    return this;
  }

   /**
   * Does the account have Autostore
   * @return hasAutostore
  **/
  @ApiModelProperty(value = "Does the account have Autostore")
  public Boolean isHasAutostore() {
    return hasAutostore;
  }

  public void setHasAutostore(Boolean hasAutostore) {
    this.hasAutostore = hasAutostore;
  }

  public ModelConfiguration hasOfficeOnline(Boolean hasOfficeOnline) {
    this.hasOfficeOnline = hasOfficeOnline;
    return this;
  }

   /**
   * Is Office Online (WOPI) enabled
   * @return hasOfficeOnline
  **/
  @ApiModelProperty(value = "Is Office Online (WOPI) enabled")
  public Boolean isHasOfficeOnline() {
    return hasOfficeOnline;
  }

  public void setHasOfficeOnline(Boolean hasOfficeOnline) {
    this.hasOfficeOnline = hasOfficeOnline;
  }

  public ModelConfiguration hasOfficeDesktop(Boolean hasOfficeDesktop) {
    this.hasOfficeDesktop = hasOfficeDesktop;
    return this;
  }

   /**
   * Is Office Desktop enabled enabled
   * @return hasOfficeDesktop
  **/
  @ApiModelProperty(value = "Is Office Desktop enabled enabled")
  public Boolean isHasOfficeDesktop() {
    return hasOfficeDesktop;
  }

  public void setHasOfficeDesktop(Boolean hasOfficeDesktop) {
    this.hasOfficeDesktop = hasOfficeDesktop;
  }

  public ModelConfiguration hidePermissionManagement(Boolean hidePermissionManagement) {
    this.hidePermissionManagement = hidePermissionManagement;
    return this;
  }

   /**
   * Hide PermissionManagement dialog for subusers in Commmon
   * @return hidePermissionManagement
  **/
  @ApiModelProperty(value = "Hide PermissionManagement dialog for subusers in Commmon")
  public Boolean isHidePermissionManagement() {
    return hidePermissionManagement;
  }

  public void setHidePermissionManagement(Boolean hidePermissionManagement) {
    this.hidePermissionManagement = hidePermissionManagement;
  }

  public ModelConfiguration hasRecycleBin(Boolean hasRecycleBin) {
    this.hasRecycleBin = hasRecycleBin;
    return this;
  }

   /**
   * Is the recycle bin enabled
   * @return hasRecycleBin
  **/
  @ApiModelProperty(value = "Is the recycle bin enabled")
  public Boolean isHasRecycleBin() {
    return hasRecycleBin;
  }

  public void setHasRecycleBin(Boolean hasRecycleBin) {
    this.hasRecycleBin = hasRecycleBin;
  }

  public ModelConfiguration showHiddenFiles(Boolean showHiddenFiles) {
    this.showHiddenFiles = showHiddenFiles;
    return this;
  }

   /**
   * Show or hide hidden files
   * @return showHiddenFiles
  **/
  @ApiModelProperty(value = "Show or hide hidden files")
  public Boolean isShowHiddenFiles() {
    return showHiddenFiles;
  }

  public void setShowHiddenFiles(Boolean showHiddenFiles) {
    this.showHiddenFiles = showHiddenFiles;
  }

  public ModelConfiguration showUsername(Boolean showUsername) {
    this.showUsername = showUsername;
    return this;
  }

   /**
   * Show the username
   * @return showUsername
  **/
  @ApiModelProperty(value = "Show the username")
  public Boolean isShowUsername() {
    return showUsername;
  }

  public void setShowUsername(Boolean showUsername) {
    this.showUsername = showUsername;
  }

  public ModelConfiguration startPage(String startPage) {
    this.startPage = startPage;
    return this;
  }

   /**
   * Selected start page
   * @return startPage
  **/
  @ApiModelProperty(value = "Selected start page")
  public String getStartPage() {
    return startPage;
  }

  public void setStartPage(String startPage) {
    this.startPage = startPage;
  }

  public ModelConfiguration locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Language
   * @return locale
  **/
  @ApiModelProperty(value = "Language")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public ModelConfiguration theme(String theme) {
    this.theme = theme;
    return this;
  }

   /**
   * What theme to use
   * @return theme
  **/
  @ApiModelProperty(value = "What theme to use")
  public String getTheme() {
    return theme;
  }

  public void setTheme(String theme) {
    this.theme = theme;
  }

  public ModelConfiguration hideSplash(Boolean hideSplash) {
    this.hideSplash = hideSplash;
    return this;
  }

   /**
   * Show or hide the splash screen
   * @return hideSplash
  **/
  @ApiModelProperty(value = "Show or hide the splash screen")
  public Boolean isHideSplash() {
    return hideSplash;
  }

  public void setHideSplash(Boolean hideSplash) {
    this.hideSplash = hideSplash;
  }

  public ModelConfiguration userAccountMode(Integer userAccountMode) {
    this.userAccountMode = userAccountMode;
    return this;
  }

   /**
   * What features are available in settings (0 &#x3D; Deny, 1 &#x3D; Setting, 2 &#x3D; Overview, 3 &#x3D; UserSetting, 4 &#x3D; OverviewPlus, 5 &#x3D; Upgrade, 6 &#x3D; Full)
   * @return userAccountMode
  **/
  @ApiModelProperty(value = "What features are available in settings (0 = Deny, 1 = Setting, 2 = Overview, 3 = UserSetting, 4 = OverviewPlus, 5 = Upgrade, 6 = Full)")
  public Integer getUserAccountMode() {
    return userAccountMode;
  }

  public void setUserAccountMode(Integer userAccountMode) {
    this.userAccountMode = userAccountMode;
  }

  public ModelConfiguration allowShare(Boolean allowShare) {
    this.allowShare = allowShare;
    return this;
  }

   /**
   * Share allowed for all users
   * @return allowShare
  **/
  @ApiModelProperty(value = "Share allowed for all users")
  public Boolean isAllowShare() {
    return allowShare;
  }

  public void setAllowShare(Boolean allowShare) {
    this.allowShare = allowShare;
  }

  public ModelConfiguration hasEvents(Boolean hasEvents) {
    this.hasEvents = hasEvents;
    return this;
  }

   /**
   * Is account events (GDPR) available
   * @return hasEvents
  **/
  @ApiModelProperty(value = "Is account events (GDPR) available")
  public Boolean isHasEvents() {
    return hasEvents;
  }

  public void setHasEvents(Boolean hasEvents) {
    this.hasEvents = hasEvents;
  }

  public ModelConfiguration hasVersioning(Boolean hasVersioning) {
    this.hasVersioning = hasVersioning;
    return this;
  }

   /**
   * Does the account have file versioning
   * @return hasVersioning
  **/
  @ApiModelProperty(value = "Does the account have file versioning")
  public Boolean isHasVersioning() {
    return hasVersioning;
  }

  public void setHasVersioning(Boolean hasVersioning) {
    this.hasVersioning = hasVersioning;
  }

  public ModelConfiguration hasWebDav(Boolean hasWebDav) {
    this.hasWebDav = hasWebDav;
    return this;
  }

   /**
   * Does the account have access to WebDAV
   * @return hasWebDav
  **/
  @ApiModelProperty(value = "Does the account have access to WebDAV")
  public Boolean isHasWebDav() {
    return hasWebDav;
  }

  public void setHasWebDav(Boolean hasWebDav) {
    this.hasWebDav = hasWebDav;
  }

  public ModelConfiguration hasWebDavPasswords(Boolean hasWebDavPasswords) {
    this.hasWebDavPasswords = hasWebDavPasswords;
    return this;
  }

   /**
   * Does the account need to use other password(s) for WebDAV
   * @return hasWebDavPasswords
  **/
  @ApiModelProperty(value = "Does the account need to use other password(s) for WebDAV")
  public Boolean isHasWebDavPasswords() {
    return hasWebDavPasswords;
  }

  public void setHasWebDavPasswords(Boolean hasWebDavPasswords) {
    this.hasWebDavPasswords = hasWebDavPasswords;
  }

  public ModelConfiguration isShareBankIDAuthAvailable(Boolean isShareBankIDAuthAvailable) {
    this.isShareBankIDAuthAvailable = isShareBankIDAuthAvailable;
    return this;
  }

   /**
   * Can public shares protected by BankID (Sweden only) be activated
   * @return isShareBankIDAuthAvailable
  **/
  @ApiModelProperty(value = "Can public shares protected by BankID (Sweden only) be activated")
  public Boolean isIsShareBankIDAuthAvailable() {
    return isShareBankIDAuthAvailable;
  }

  public void setIsShareBankIDAuthAvailable(Boolean isShareBankIDAuthAvailable) {
    this.isShareBankIDAuthAvailable = isShareBankIDAuthAvailable;
  }

  public ModelConfiguration hasShareBankIDAuth(Boolean hasShareBankIDAuth) {
    this.hasShareBankIDAuth = hasShareBankIDAuth;
    return this;
  }

   /**
   * Can public shares be protected by BankID (Sweden only)
   * @return hasShareBankIDAuth
  **/
  @ApiModelProperty(value = "Can public shares be protected by BankID (Sweden only)")
  public Boolean isHasShareBankIDAuth() {
    return hasShareBankIDAuth;
  }

  public void setHasShareBankIDAuth(Boolean hasShareBankIDAuth) {
    this.hasShareBankIDAuth = hasShareBankIDAuth;
  }

  public ModelConfiguration hasShareOfficeOnline(Boolean hasShareOfficeOnline) {
    this.hasShareOfficeOnline = hasShareOfficeOnline;
    return this;
  }

   /**
   * Is Office Online (WOPI) enabled on shares
   * @return hasShareOfficeOnline
  **/
  @ApiModelProperty(value = "Is Office Online (WOPI) enabled on shares")
  public Boolean isHasShareOfficeOnline() {
    return hasShareOfficeOnline;
  }

  public void setHasShareOfficeOnline(Boolean hasShareOfficeOnline) {
    this.hasShareOfficeOnline = hasShareOfficeOnline;
  }

  public ModelConfiguration hasMyFiles(Boolean hasMyFiles) {
    this.hasMyFiles = hasMyFiles;
    return this;
  }

   /**
   * Is My Files enabled
   * @return hasMyFiles
  **/
  @ApiModelProperty(value = "Is My Files enabled")
  public Boolean isHasMyFiles() {
    return hasMyFiles;
  }

  public void setHasMyFiles(Boolean hasMyFiles) {
    this.hasMyFiles = hasMyFiles;
  }

  public ModelConfiguration isBankIDLogin(Boolean isBankIDLogin) {
    this.isBankIDLogin = isBankIDLogin;
    return this;
  }

   /**
   * Is login done via BankID
   * @return isBankIDLogin
  **/
  @ApiModelProperty(value = "Is login done via BankID")
  public Boolean isIsBankIDLogin() {
    return isBankIDLogin;
  }

  public void setIsBankIDLogin(Boolean isBankIDLogin) {
    this.isBankIDLogin = isBankIDLogin;
  }

  public ModelConfiguration hasApps(Boolean hasApps) {
    this.hasApps = hasApps;
    return this;
  }

   /**
   * Is access to apps enabled
   * @return hasApps
  **/
  @ApiModelProperty(value = "Is access to apps enabled")
  public Boolean isHasApps() {
    return hasApps;
  }

  public void setHasApps(Boolean hasApps) {
    this.hasApps = hasApps;
  }

  public ModelConfiguration isBankIDVerificationRequired(Boolean isBankIDVerificationRequired) {
    this.isBankIDVerificationRequired = isBankIDVerificationRequired;
    return this;
  }

   /**
   * Is login with BankID required
   * @return isBankIDVerificationRequired
  **/
  @ApiModelProperty(value = "Is login with BankID required")
  public Boolean isIsBankIDVerificationRequired() {
    return isBankIDVerificationRequired;
  }

  public void setIsBankIDVerificationRequired(Boolean isBankIDVerificationRequired) {
    this.isBankIDVerificationRequired = isBankIDVerificationRequired;
  }

  public ModelConfiguration isShareBankIDRequired(Boolean isShareBankIDRequired) {
    this.isShareBankIDRequired = isShareBankIDRequired;
    return this;
  }

   /**
   * Is share with BankID required
   * @return isShareBankIDRequired
  **/
  @ApiModelProperty(value = "Is share with BankID required")
  public Boolean isIsShareBankIDRequired() {
    return isShareBankIDRequired;
  }

  public void setIsShareBankIDRequired(Boolean isShareBankIDRequired) {
    this.isShareBankIDRequired = isShareBankIDRequired;
  }

  public ModelConfiguration isTwoFactorLoginRequired(Boolean isTwoFactorLoginRequired) {
    this.isTwoFactorLoginRequired = isTwoFactorLoginRequired;
    return this;
  }

   /**
   * Two Factor login Required
   * @return isTwoFactorLoginRequired
  **/
  @ApiModelProperty(value = "Two Factor login Required")
  public Boolean isIsTwoFactorLoginRequired() {
    return isTwoFactorLoginRequired;
  }

  public void setIsTwoFactorLoginRequired(Boolean isTwoFactorLoginRequired) {
    this.isTwoFactorLoginRequired = isTwoFactorLoginRequired;
  }

  public ModelConfiguration hasBranding(Boolean hasBranding) {
    this.hasBranding = hasBranding;
    return this;
  }

   /**
   * Account has Branding
   * @return hasBranding
  **/
  @ApiModelProperty(value = "Account has Branding")
  public Boolean isHasBranding() {
    return hasBranding;
  }

  public void setHasBranding(Boolean hasBranding) {
    this.hasBranding = hasBranding;
  }

  public ModelConfiguration isBrandingAvailable(Boolean isBrandingAvailable) {
    this.isBrandingAvailable = isBrandingAvailable;
    return this;
  }

   /**
   * Account can buy Branding
   * @return isBrandingAvailable
  **/
  @ApiModelProperty(value = "Account can buy Branding")
  public Boolean isIsBrandingAvailable() {
    return isBrandingAvailable;
  }

  public void setIsBrandingAvailable(Boolean isBrandingAvailable) {
    this.isBrandingAvailable = isBrandingAvailable;
  }

  public ModelConfiguration hasPhoneBackup(Boolean hasPhoneBackup) {
    this.hasPhoneBackup = hasPhoneBackup;
    return this;
  }

   /**
   * Has phone app backup
   * @return hasPhoneBackup
  **/
  @ApiModelProperty(value = "Has phone app backup")
  public Boolean isHasPhoneBackup() {
    return hasPhoneBackup;
  }

  public void setHasPhoneBackup(Boolean hasPhoneBackup) {
    this.hasPhoneBackup = hasPhoneBackup;
  }

  public ModelConfiguration hasSigning(Boolean hasSigning) {
    this.hasSigning = hasSigning;
    return this;
  }

   /**
   * Account has Signing
   * @return hasSigning
  **/
  @ApiModelProperty(value = "Account has Signing")
  public Boolean isHasSigning() {
    return hasSigning;
  }

  public void setHasSigning(Boolean hasSigning) {
    this.hasSigning = hasSigning;
  }

  public ModelConfiguration isSigningAvailable(Boolean isSigningAvailable) {
    this.isSigningAvailable = isSigningAvailable;
    return this;
  }

   /**
   * Account can buy Branding
   * @return isSigningAvailable
  **/
  @ApiModelProperty(value = "Account can buy Branding")
  public Boolean isIsSigningAvailable() {
    return isSigningAvailable;
  }

  public void setIsSigningAvailable(Boolean isSigningAvailable) {
    this.isSigningAvailable = isSigningAvailable;
  }

  public ModelConfiguration hasCloudFolder(Boolean hasCloudFolder) {
    this.hasCloudFolder = hasCloudFolder;
    return this;
  }

   /**
   * Account has Cloud Folder
   * @return hasCloudFolder
  **/
  @ApiModelProperty(value = "Account has Cloud Folder")
  public Boolean isHasCloudFolder() {
    return hasCloudFolder;
  }

  public void setHasCloudFolder(Boolean hasCloudFolder) {
    this.hasCloudFolder = hasCloudFolder;
  }

  public ModelConfiguration isShareProtectionRequired(Boolean isShareProtectionRequired) {
    this.isShareProtectionRequired = isShareProtectionRequired;
    return this;
  }

   /**
   * Is share with password or BankID required
   * @return isShareProtectionRequired
  **/
  @ApiModelProperty(value = "Is share with password or BankID required")
  public Boolean isIsShareProtectionRequired() {
    return isShareProtectionRequired;
  }

  public void setIsShareProtectionRequired(Boolean isShareProtectionRequired) {
    this.isShareProtectionRequired = isShareProtectionRequired;
  }

  public ModelConfiguration promptPWA(Boolean promptPWA) {
    this.promptPWA = promptPWA;
    return this;
  }

   /**
   * If the website should prompt installation of the app
   * @return promptPWA
  **/
  @ApiModelProperty(value = "If the website should prompt installation of the app")
  public Boolean isPromptPWA() {
    return promptPWA;
  }

  public void setPromptPWA(Boolean promptPWA) {
    this.promptPWA = promptPWA;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModelConfiguration _configuration = (ModelConfiguration) o;
    return Objects.equals(this.hasMulti, _configuration.hasMulti) &&
        Objects.equals(this.hasCommon, _configuration.hasCommon) &&
        Objects.equals(this.hasPermissions, _configuration.hasPermissions) &&
        Objects.equals(this.hasExtendedPermissions, _configuration.hasExtendedPermissions) &&
        Objects.equals(this.hasTeamSync, _configuration.hasTeamSync) &&
        Objects.equals(this.hasGroups, _configuration.hasGroups) &&
        Objects.equals(this.hasQuota, _configuration.hasQuota) &&
        Objects.equals(this.hasInspection, _configuration.hasInspection) &&
        Objects.equals(this.hasBackup, _configuration.hasBackup) &&
        Objects.equals(this.hasUnlimitedBackup, _configuration.hasUnlimitedBackup) &&
        Objects.equals(this.hasKlsBackup, _configuration.hasKlsBackup) &&
        Objects.equals(this.hasMedia, _configuration.hasMedia) &&
        Objects.equals(this.isMoveFromCommonDisabled, _configuration.isMoveFromCommonDisabled) &&
        Objects.equals(this.hasPhotos, _configuration.hasPhotos) &&
        Objects.equals(this.hasSync, _configuration.hasSync) &&
        Objects.equals(this.hasAutostore, _configuration.hasAutostore) &&
        Objects.equals(this.hasOfficeOnline, _configuration.hasOfficeOnline) &&
        Objects.equals(this.hasOfficeDesktop, _configuration.hasOfficeDesktop) &&
        Objects.equals(this.hidePermissionManagement, _configuration.hidePermissionManagement) &&
        Objects.equals(this.hasRecycleBin, _configuration.hasRecycleBin) &&
        Objects.equals(this.showHiddenFiles, _configuration.showHiddenFiles) &&
        Objects.equals(this.showUsername, _configuration.showUsername) &&
        Objects.equals(this.startPage, _configuration.startPage) &&
        Objects.equals(this.locale, _configuration.locale) &&
        Objects.equals(this.theme, _configuration.theme) &&
        Objects.equals(this.hideSplash, _configuration.hideSplash) &&
        Objects.equals(this.userAccountMode, _configuration.userAccountMode) &&
        Objects.equals(this.allowShare, _configuration.allowShare) &&
        Objects.equals(this.hasEvents, _configuration.hasEvents) &&
        Objects.equals(this.hasVersioning, _configuration.hasVersioning) &&
        Objects.equals(this.hasWebDav, _configuration.hasWebDav) &&
        Objects.equals(this.hasWebDavPasswords, _configuration.hasWebDavPasswords) &&
        Objects.equals(this.isShareBankIDAuthAvailable, _configuration.isShareBankIDAuthAvailable) &&
        Objects.equals(this.hasShareBankIDAuth, _configuration.hasShareBankIDAuth) &&
        Objects.equals(this.hasShareOfficeOnline, _configuration.hasShareOfficeOnline) &&
        Objects.equals(this.hasMyFiles, _configuration.hasMyFiles) &&
        Objects.equals(this.isBankIDLogin, _configuration.isBankIDLogin) &&
        Objects.equals(this.hasApps, _configuration.hasApps) &&
        Objects.equals(this.isBankIDVerificationRequired, _configuration.isBankIDVerificationRequired) &&
        Objects.equals(this.isShareBankIDRequired, _configuration.isShareBankIDRequired) &&
        Objects.equals(this.isTwoFactorLoginRequired, _configuration.isTwoFactorLoginRequired) &&
        Objects.equals(this.hasBranding, _configuration.hasBranding) &&
        Objects.equals(this.isBrandingAvailable, _configuration.isBrandingAvailable) &&
        Objects.equals(this.hasPhoneBackup, _configuration.hasPhoneBackup) &&
        Objects.equals(this.hasSigning, _configuration.hasSigning) &&
        Objects.equals(this.isSigningAvailable, _configuration.isSigningAvailable) &&
        Objects.equals(this.hasCloudFolder, _configuration.hasCloudFolder) &&
        Objects.equals(this.isShareProtectionRequired, _configuration.isShareProtectionRequired) &&
        Objects.equals(this.promptPWA, _configuration.promptPWA);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hasMulti, hasCommon, hasPermissions, hasExtendedPermissions, hasTeamSync, hasGroups, hasQuota, hasInspection, hasBackup, hasUnlimitedBackup, hasKlsBackup, hasMedia, isMoveFromCommonDisabled, hasPhotos, hasSync, hasAutostore, hasOfficeOnline, hasOfficeDesktop, hidePermissionManagement, hasRecycleBin, showHiddenFiles, showUsername, startPage, locale, theme, hideSplash, userAccountMode, allowShare, hasEvents, hasVersioning, hasWebDav, hasWebDavPasswords, isShareBankIDAuthAvailable, hasShareBankIDAuth, hasShareOfficeOnline, hasMyFiles, isBankIDLogin, hasApps, isBankIDVerificationRequired, isShareBankIDRequired, isTwoFactorLoginRequired, hasBranding, isBrandingAvailable, hasPhoneBackup, hasSigning, isSigningAvailable, hasCloudFolder, isShareProtectionRequired, promptPWA);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModelConfiguration {\n");
    
    sb.append("    hasMulti: ").append(toIndentedString(hasMulti)).append("\n");
    sb.append("    hasCommon: ").append(toIndentedString(hasCommon)).append("\n");
    sb.append("    hasPermissions: ").append(toIndentedString(hasPermissions)).append("\n");
    sb.append("    hasExtendedPermissions: ").append(toIndentedString(hasExtendedPermissions)).append("\n");
    sb.append("    hasTeamSync: ").append(toIndentedString(hasTeamSync)).append("\n");
    sb.append("    hasGroups: ").append(toIndentedString(hasGroups)).append("\n");
    sb.append("    hasQuota: ").append(toIndentedString(hasQuota)).append("\n");
    sb.append("    hasInspection: ").append(toIndentedString(hasInspection)).append("\n");
    sb.append("    hasBackup: ").append(toIndentedString(hasBackup)).append("\n");
    sb.append("    hasUnlimitedBackup: ").append(toIndentedString(hasUnlimitedBackup)).append("\n");
    sb.append("    hasKlsBackup: ").append(toIndentedString(hasKlsBackup)).append("\n");
    sb.append("    hasMedia: ").append(toIndentedString(hasMedia)).append("\n");
    sb.append("    isMoveFromCommonDisabled: ").append(toIndentedString(isMoveFromCommonDisabled)).append("\n");
    sb.append("    hasPhotos: ").append(toIndentedString(hasPhotos)).append("\n");
    sb.append("    hasSync: ").append(toIndentedString(hasSync)).append("\n");
    sb.append("    hasAutostore: ").append(toIndentedString(hasAutostore)).append("\n");
    sb.append("    hasOfficeOnline: ").append(toIndentedString(hasOfficeOnline)).append("\n");
    sb.append("    hasOfficeDesktop: ").append(toIndentedString(hasOfficeDesktop)).append("\n");
    sb.append("    hidePermissionManagement: ").append(toIndentedString(hidePermissionManagement)).append("\n");
    sb.append("    hasRecycleBin: ").append(toIndentedString(hasRecycleBin)).append("\n");
    sb.append("    showHiddenFiles: ").append(toIndentedString(showHiddenFiles)).append("\n");
    sb.append("    showUsername: ").append(toIndentedString(showUsername)).append("\n");
    sb.append("    startPage: ").append(toIndentedString(startPage)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    hideSplash: ").append(toIndentedString(hideSplash)).append("\n");
    sb.append("    userAccountMode: ").append(toIndentedString(userAccountMode)).append("\n");
    sb.append("    allowShare: ").append(toIndentedString(allowShare)).append("\n");
    sb.append("    hasEvents: ").append(toIndentedString(hasEvents)).append("\n");
    sb.append("    hasVersioning: ").append(toIndentedString(hasVersioning)).append("\n");
    sb.append("    hasWebDav: ").append(toIndentedString(hasWebDav)).append("\n");
    sb.append("    hasWebDavPasswords: ").append(toIndentedString(hasWebDavPasswords)).append("\n");
    sb.append("    isShareBankIDAuthAvailable: ").append(toIndentedString(isShareBankIDAuthAvailable)).append("\n");
    sb.append("    hasShareBankIDAuth: ").append(toIndentedString(hasShareBankIDAuth)).append("\n");
    sb.append("    hasShareOfficeOnline: ").append(toIndentedString(hasShareOfficeOnline)).append("\n");
    sb.append("    hasMyFiles: ").append(toIndentedString(hasMyFiles)).append("\n");
    sb.append("    isBankIDLogin: ").append(toIndentedString(isBankIDLogin)).append("\n");
    sb.append("    hasApps: ").append(toIndentedString(hasApps)).append("\n");
    sb.append("    isBankIDVerificationRequired: ").append(toIndentedString(isBankIDVerificationRequired)).append("\n");
    sb.append("    isShareBankIDRequired: ").append(toIndentedString(isShareBankIDRequired)).append("\n");
    sb.append("    isTwoFactorLoginRequired: ").append(toIndentedString(isTwoFactorLoginRequired)).append("\n");
    sb.append("    hasBranding: ").append(toIndentedString(hasBranding)).append("\n");
    sb.append("    isBrandingAvailable: ").append(toIndentedString(isBrandingAvailable)).append("\n");
    sb.append("    hasPhoneBackup: ").append(toIndentedString(hasPhoneBackup)).append("\n");
    sb.append("    hasSigning: ").append(toIndentedString(hasSigning)).append("\n");
    sb.append("    isSigningAvailable: ").append(toIndentedString(isSigningAvailable)).append("\n");
    sb.append("    hasCloudFolder: ").append(toIndentedString(hasCloudFolder)).append("\n");
    sb.append("    isShareProtectionRequired: ").append(toIndentedString(isShareProtectionRequired)).append("\n");
    sb.append("    promptPWA: ").append(toIndentedString(promptPWA)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

