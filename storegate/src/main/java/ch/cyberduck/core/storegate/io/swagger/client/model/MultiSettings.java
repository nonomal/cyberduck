/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * A accounts multi settings. Properties that are null/undefined/missing are not available
 */
@ApiModel(description = "A accounts multi settings. Properties that are null/undefined/missing are not available")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class MultiSettings {
  @JsonProperty("versionsAvailable")
  private List<Integer> versionsAvailable = null;

  @JsonProperty("idProvider")
  private String idProvider = null;

  @JsonProperty("idProviderCode")
  private String idProviderCode = null;

  @JsonProperty("showForceTwoFactor")
  private Boolean showForceTwoFactor = null;

  @JsonProperty("hasBackupAccess")
  private Boolean hasBackupAccess = null;

  @JsonProperty("officeOnline")
  private Boolean officeOnline = null;

  @JsonProperty("recycleBin")
  private Boolean recycleBin = null;

  @JsonProperty("versions")
  private Integer versions = null;

  @JsonProperty("commonRootPermission")
  private Integer commonRootPermission = null;

  @JsonProperty("extendedPermissions")
  private Boolean extendedPermissions = null;

  @JsonProperty("hidePermissionManagement")
  private Boolean hidePermissionManagement = null;

  @JsonProperty("hideMedia")
  private Boolean hideMedia = null;

  @JsonProperty("disableMoveFromCommon")
  private Boolean disableMoveFromCommon = null;

  @JsonProperty("allowShare")
  private Boolean allowShare = null;

  @JsonProperty("forceTwoFactor")
  private Boolean forceTwoFactor = null;

  @JsonProperty("eidLoginRequired")
  private Boolean eidLoginRequired = null;

  @JsonProperty("eidShareRequired")
  private Boolean eidShareRequired = null;

  @JsonProperty("eidShareRequiredSendMail")
  private Boolean eidShareRequiredSendMail = null;

  @JsonProperty("protectedShareRequired")
  private Boolean protectedShareRequired = null;

  @JsonProperty("protectedShareRequiredSendMail")
  private Boolean protectedShareRequiredSendMail = null;

  @JsonProperty("twoFactorLoginRequired")
  private Boolean twoFactorLoginRequired = null;

  @JsonProperty("officeDesktop")
  private Boolean officeDesktop = null;

  @JsonProperty("backupAccessPassword")
  private String backupAccessPassword = null;

  @JsonProperty("ipRestrictions")
  private List<String> ipRestrictions = null;

  @JsonProperty("ipRestrictionsSharesExcluded")
  private Boolean ipRestrictionsSharesExcluded = null;

  public MultiSettings versionsAvailable(List<Integer> versionsAvailable) {
    this.versionsAvailable = versionsAvailable;
    return this;
  }

  public MultiSettings addVersionsAvailableItem(Integer versionsAvailableItem) {
    if (this.versionsAvailable == null) {
      this.versionsAvailable = new ArrayList<>();
    }
    this.versionsAvailable.add(versionsAvailableItem);
    return this;
  }

   /**
   * Lists the available settings for versioning.
   * @return versionsAvailable
  **/
  @ApiModelProperty(value = "Lists the available settings for versioning.")
  public List<Integer> getVersionsAvailable() {
    return versionsAvailable;
  }

  public void setVersionsAvailable(List<Integer> versionsAvailable) {
    this.versionsAvailable = versionsAvailable;
  }

  public MultiSettings idProvider(String idProvider) {
    this.idProvider = idProvider;
    return this;
  }

   /**
   * Available identity provider for SSO/Provisioning
   * @return idProvider
  **/
  @ApiModelProperty(value = "Available identity provider for SSO/Provisioning")
  public String getIdProvider() {
    return idProvider;
  }

  public void setIdProvider(String idProvider) {
    this.idProvider = idProvider;
  }

  public MultiSettings idProviderCode(String idProviderCode) {
    this.idProviderCode = idProviderCode;
    return this;
  }

   /**
   * Code for identity provider
   * @return idProviderCode
  **/
  @ApiModelProperty(value = "Code for identity provider")
  public String getIdProviderCode() {
    return idProviderCode;
  }

  public void setIdProviderCode(String idProviderCode) {
    this.idProviderCode = idProviderCode;
  }

  public MultiSettings showForceTwoFactor(Boolean showForceTwoFactor) {
    this.showForceTwoFactor = showForceTwoFactor;
    return this;
  }

   /**
   * Show Force TwoFactor for all users
   * @return showForceTwoFactor
  **/
  @ApiModelProperty(value = "Show Force TwoFactor for all users")
  public Boolean isShowForceTwoFactor() {
    return showForceTwoFactor;
  }

  public void setShowForceTwoFactor(Boolean showForceTwoFactor) {
    this.showForceTwoFactor = showForceTwoFactor;
  }

  public MultiSettings hasBackupAccess(Boolean hasBackupAccess) {
    this.hasBackupAccess = hasBackupAccess;
    return this;
  }

   /**
   * Allow backup access via WebDAV
   * @return hasBackupAccess
  **/
  @ApiModelProperty(value = "Allow backup access via WebDAV")
  public Boolean isHasBackupAccess() {
    return hasBackupAccess;
  }

  public void setHasBackupAccess(Boolean hasBackupAccess) {
    this.hasBackupAccess = hasBackupAccess;
  }

  public MultiSettings officeOnline(Boolean officeOnline) {
    this.officeOnline = officeOnline;
    return this;
  }

   /**
   * Enable Office Online for entire subscription
   * @return officeOnline
  **/
  @ApiModelProperty(value = "Enable Office Online for entire subscription")
  public Boolean isOfficeOnline() {
    return officeOnline;
  }

  public void setOfficeOnline(Boolean officeOnline) {
    this.officeOnline = officeOnline;
  }

  public MultiSettings recycleBin(Boolean recycleBin) {
    this.recycleBin = recycleBin;
    return this;
  }

   /**
   * Indicates if the recycle bin is enabled.
   * @return recycleBin
  **/
  @ApiModelProperty(value = "Indicates if the recycle bin is enabled.")
  public Boolean isRecycleBin() {
    return recycleBin;
  }

  public void setRecycleBin(Boolean recycleBin) {
    this.recycleBin = recycleBin;
  }

  public MultiSettings versions(Integer versions) {
    this.versions = versions;
    return this;
  }

   /**
   * Number of versions keept in versioning.
   * @return versions
  **/
  @ApiModelProperty(value = "Number of versions keept in versioning.")
  public Integer getVersions() {
    return versions;
  }

  public void setVersions(Integer versions) {
    this.versions = versions;
  }

  public MultiSettings commonRootPermission(Integer commonRootPermission) {
    this.commonRootPermission = commonRootPermission;
    return this;
  }

   /**
   * Permission for common root (0 &#x3D; NoAccess, 1 &#x3D; ReadOnly, 2 &#x3D; ReadWrite, 4 &#x3D; Synchronize, 99 &#x3D; FullControl, -1 &#x3D; None)
   * @return commonRootPermission
  **/
  @ApiModelProperty(value = "Permission for common root (0 = NoAccess, 1 = ReadOnly, 2 = ReadWrite, 4 = Synchronize, 99 = FullControl, -1 = None)")
  public Integer getCommonRootPermission() {
    return commonRootPermission;
  }

  public void setCommonRootPermission(Integer commonRootPermission) {
    this.commonRootPermission = commonRootPermission;
  }

  public MultiSettings extendedPermissions(Boolean extendedPermissions) {
    this.extendedPermissions = extendedPermissions;
    return this;
  }

   /**
   * Extended permissions in common
   * @return extendedPermissions
  **/
  @ApiModelProperty(value = "Extended permissions in common")
  public Boolean isExtendedPermissions() {
    return extendedPermissions;
  }

  public void setExtendedPermissions(Boolean extendedPermissions) {
    this.extendedPermissions = extendedPermissions;
  }

  public MultiSettings hidePermissionManagement(Boolean hidePermissionManagement) {
    this.hidePermissionManagement = hidePermissionManagement;
    return this;
  }

   /**
   * Extended permissions in common
   * @return hidePermissionManagement
  **/
  @ApiModelProperty(value = "Extended permissions in common")
  public Boolean isHidePermissionManagement() {
    return hidePermissionManagement;
  }

  public void setHidePermissionManagement(Boolean hidePermissionManagement) {
    this.hidePermissionManagement = hidePermissionManagement;
  }

  public MultiSettings hideMedia(Boolean hideMedia) {
    this.hideMedia = hideMedia;
    return this;
  }

   /**
   * Extended permissions in common
   * @return hideMedia
  **/
  @ApiModelProperty(value = "Extended permissions in common")
  public Boolean isHideMedia() {
    return hideMedia;
  }

  public void setHideMedia(Boolean hideMedia) {
    this.hideMedia = hideMedia;
  }

  public MultiSettings disableMoveFromCommon(Boolean disableMoveFromCommon) {
    this.disableMoveFromCommon = disableMoveFromCommon;
    return this;
  }

   /**
   * Extended permissions in common
   * @return disableMoveFromCommon
  **/
  @ApiModelProperty(value = "Extended permissions in common")
  public Boolean isDisableMoveFromCommon() {
    return disableMoveFromCommon;
  }

  public void setDisableMoveFromCommon(Boolean disableMoveFromCommon) {
    this.disableMoveFromCommon = disableMoveFromCommon;
  }

  public MultiSettings allowShare(Boolean allowShare) {
    this.allowShare = allowShare;
    return this;
  }

   /**
   * Allow share for all users
   * @return allowShare
  **/
  @ApiModelProperty(value = "Allow share for all users")
  public Boolean isAllowShare() {
    return allowShare;
  }

  public void setAllowShare(Boolean allowShare) {
    this.allowShare = allowShare;
  }

  public MultiSettings forceTwoFactor(Boolean forceTwoFactor) {
    this.forceTwoFactor = forceTwoFactor;
    return this;
  }

   /**
   * Force TwoFactor for all users
   * @return forceTwoFactor
  **/
  @ApiModelProperty(value = "Force TwoFactor for all users")
  public Boolean isForceTwoFactor() {
    return forceTwoFactor;
  }

  public void setForceTwoFactor(Boolean forceTwoFactor) {
    this.forceTwoFactor = forceTwoFactor;
  }

  public MultiSettings eidLoginRequired(Boolean eidLoginRequired) {
    this.eidLoginRequired = eidLoginRequired;
    return this;
  }

   /**
   * Force BankID for users
   * @return eidLoginRequired
  **/
  @ApiModelProperty(value = "Force BankID for users")
  public Boolean isEidLoginRequired() {
    return eidLoginRequired;
  }

  public void setEidLoginRequired(Boolean eidLoginRequired) {
    this.eidLoginRequired = eidLoginRequired;
  }

  public MultiSettings eidShareRequired(Boolean eidShareRequired) {
    this.eidShareRequired = eidShareRequired;
    return this;
  }

   /**
   * Force BankID for shares
   * @return eidShareRequired
  **/
  @ApiModelProperty(value = "Force BankID for shares")
  public Boolean isEidShareRequired() {
    return eidShareRequired;
  }

  public void setEidShareRequired(Boolean eidShareRequired) {
    this.eidShareRequired = eidShareRequired;
  }

  public MultiSettings eidShareRequiredSendMail(Boolean eidShareRequiredSendMail) {
    this.eidShareRequiredSendMail = eidShareRequiredSendMail;
    return this;
  }

   /**
   * If send mail when EIDShareRequired
   * @return eidShareRequiredSendMail
  **/
  @ApiModelProperty(value = "If send mail when EIDShareRequired")
  public Boolean isEidShareRequiredSendMail() {
    return eidShareRequiredSendMail;
  }

  public void setEidShareRequiredSendMail(Boolean eidShareRequiredSendMail) {
    this.eidShareRequiredSendMail = eidShareRequiredSendMail;
  }

  public MultiSettings protectedShareRequired(Boolean protectedShareRequired) {
    this.protectedShareRequired = protectedShareRequired;
    return this;
  }

   /**
   * Force protection for shares
   * @return protectedShareRequired
  **/
  @ApiModelProperty(value = "Force protection for shares")
  public Boolean isProtectedShareRequired() {
    return protectedShareRequired;
  }

  public void setProtectedShareRequired(Boolean protectedShareRequired) {
    this.protectedShareRequired = protectedShareRequired;
  }

  public MultiSettings protectedShareRequiredSendMail(Boolean protectedShareRequiredSendMail) {
    this.protectedShareRequiredSendMail = protectedShareRequiredSendMail;
    return this;
  }

   /**
   * If send mail when ProtectedShareRequired
   * @return protectedShareRequiredSendMail
  **/
  @ApiModelProperty(value = "If send mail when ProtectedShareRequired")
  public Boolean isProtectedShareRequiredSendMail() {
    return protectedShareRequiredSendMail;
  }

  public void setProtectedShareRequiredSendMail(Boolean protectedShareRequiredSendMail) {
    this.protectedShareRequiredSendMail = protectedShareRequiredSendMail;
  }

  public MultiSettings twoFactorLoginRequired(Boolean twoFactorLoginRequired) {
    this.twoFactorLoginRequired = twoFactorLoginRequired;
    return this;
  }

   /**
   * Force Two Factor Login
   * @return twoFactorLoginRequired
  **/
  @ApiModelProperty(value = "Force Two Factor Login")
  public Boolean isTwoFactorLoginRequired() {
    return twoFactorLoginRequired;
  }

  public void setTwoFactorLoginRequired(Boolean twoFactorLoginRequired) {
    this.twoFactorLoginRequired = twoFactorLoginRequired;
  }

  public MultiSettings officeDesktop(Boolean officeDesktop) {
    this.officeDesktop = officeDesktop;
    return this;
  }

   /**
   * Enable Office Desktop for entire subscription
   * @return officeDesktop
  **/
  @ApiModelProperty(value = "Enable Office Desktop for entire subscription")
  public Boolean isOfficeDesktop() {
    return officeDesktop;
  }

  public void setOfficeDesktop(Boolean officeDesktop) {
    this.officeDesktop = officeDesktop;
  }

  public MultiSettings backupAccessPassword(String backupAccessPassword) {
    this.backupAccessPassword = backupAccessPassword;
    return this;
  }

   /**
   * Password for allow backup access via WebDAV, Only Set
   * @return backupAccessPassword
  **/
  @ApiModelProperty(value = "Password for allow backup access via WebDAV, Only Set")
  public String getBackupAccessPassword() {
    return backupAccessPassword;
  }

  public void setBackupAccessPassword(String backupAccessPassword) {
    this.backupAccessPassword = backupAccessPassword;
  }

  public MultiSettings ipRestrictions(List<String> ipRestrictions) {
    this.ipRestrictions = ipRestrictions;
    return this;
  }

  public MultiSettings addIpRestrictionsItem(String ipRestrictionsItem) {
    if (this.ipRestrictions == null) {
      this.ipRestrictions = new ArrayList<>();
    }
    this.ipRestrictions.add(ipRestrictionsItem);
    return this;
  }

   /**
   * 
   * @return ipRestrictions
  **/
  @ApiModelProperty(value = "")
  public List<String> getIpRestrictions() {
    return ipRestrictions;
  }

  public void setIpRestrictions(List<String> ipRestrictions) {
    this.ipRestrictions = ipRestrictions;
  }

  public MultiSettings ipRestrictionsSharesExcluded(Boolean ipRestrictionsSharesExcluded) {
    this.ipRestrictionsSharesExcluded = ipRestrictionsSharesExcluded;
    return this;
  }

   /**
   * 
   * @return ipRestrictionsSharesExcluded
  **/
  @ApiModelProperty(value = "")
  public Boolean isIpRestrictionsSharesExcluded() {
    return ipRestrictionsSharesExcluded;
  }

  public void setIpRestrictionsSharesExcluded(Boolean ipRestrictionsSharesExcluded) {
    this.ipRestrictionsSharesExcluded = ipRestrictionsSharesExcluded;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MultiSettings multiSettings = (MultiSettings) o;
    return Objects.equals(this.versionsAvailable, multiSettings.versionsAvailable) &&
        Objects.equals(this.idProvider, multiSettings.idProvider) &&
        Objects.equals(this.idProviderCode, multiSettings.idProviderCode) &&
        Objects.equals(this.showForceTwoFactor, multiSettings.showForceTwoFactor) &&
        Objects.equals(this.hasBackupAccess, multiSettings.hasBackupAccess) &&
        Objects.equals(this.officeOnline, multiSettings.officeOnline) &&
        Objects.equals(this.recycleBin, multiSettings.recycleBin) &&
        Objects.equals(this.versions, multiSettings.versions) &&
        Objects.equals(this.commonRootPermission, multiSettings.commonRootPermission) &&
        Objects.equals(this.extendedPermissions, multiSettings.extendedPermissions) &&
        Objects.equals(this.hidePermissionManagement, multiSettings.hidePermissionManagement) &&
        Objects.equals(this.hideMedia, multiSettings.hideMedia) &&
        Objects.equals(this.disableMoveFromCommon, multiSettings.disableMoveFromCommon) &&
        Objects.equals(this.allowShare, multiSettings.allowShare) &&
        Objects.equals(this.forceTwoFactor, multiSettings.forceTwoFactor) &&
        Objects.equals(this.eidLoginRequired, multiSettings.eidLoginRequired) &&
        Objects.equals(this.eidShareRequired, multiSettings.eidShareRequired) &&
        Objects.equals(this.eidShareRequiredSendMail, multiSettings.eidShareRequiredSendMail) &&
        Objects.equals(this.protectedShareRequired, multiSettings.protectedShareRequired) &&
        Objects.equals(this.protectedShareRequiredSendMail, multiSettings.protectedShareRequiredSendMail) &&
        Objects.equals(this.twoFactorLoginRequired, multiSettings.twoFactorLoginRequired) &&
        Objects.equals(this.officeDesktop, multiSettings.officeDesktop) &&
        Objects.equals(this.backupAccessPassword, multiSettings.backupAccessPassword) &&
        Objects.equals(this.ipRestrictions, multiSettings.ipRestrictions) &&
        Objects.equals(this.ipRestrictionsSharesExcluded, multiSettings.ipRestrictionsSharesExcluded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionsAvailable, idProvider, idProviderCode, showForceTwoFactor, hasBackupAccess, officeOnline, recycleBin, versions, commonRootPermission, extendedPermissions, hidePermissionManagement, hideMedia, disableMoveFromCommon, allowShare, forceTwoFactor, eidLoginRequired, eidShareRequired, eidShareRequiredSendMail, protectedShareRequired, protectedShareRequiredSendMail, twoFactorLoginRequired, officeDesktop, backupAccessPassword, ipRestrictions, ipRestrictionsSharesExcluded);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MultiSettings {\n");
    
    sb.append("    versionsAvailable: ").append(toIndentedString(versionsAvailable)).append("\n");
    sb.append("    idProvider: ").append(toIndentedString(idProvider)).append("\n");
    sb.append("    idProviderCode: ").append(toIndentedString(idProviderCode)).append("\n");
    sb.append("    showForceTwoFactor: ").append(toIndentedString(showForceTwoFactor)).append("\n");
    sb.append("    hasBackupAccess: ").append(toIndentedString(hasBackupAccess)).append("\n");
    sb.append("    officeOnline: ").append(toIndentedString(officeOnline)).append("\n");
    sb.append("    recycleBin: ").append(toIndentedString(recycleBin)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("    commonRootPermission: ").append(toIndentedString(commonRootPermission)).append("\n");
    sb.append("    extendedPermissions: ").append(toIndentedString(extendedPermissions)).append("\n");
    sb.append("    hidePermissionManagement: ").append(toIndentedString(hidePermissionManagement)).append("\n");
    sb.append("    hideMedia: ").append(toIndentedString(hideMedia)).append("\n");
    sb.append("    disableMoveFromCommon: ").append(toIndentedString(disableMoveFromCommon)).append("\n");
    sb.append("    allowShare: ").append(toIndentedString(allowShare)).append("\n");
    sb.append("    forceTwoFactor: ").append(toIndentedString(forceTwoFactor)).append("\n");
    sb.append("    eidLoginRequired: ").append(toIndentedString(eidLoginRequired)).append("\n");
    sb.append("    eidShareRequired: ").append(toIndentedString(eidShareRequired)).append("\n");
    sb.append("    eidShareRequiredSendMail: ").append(toIndentedString(eidShareRequiredSendMail)).append("\n");
    sb.append("    protectedShareRequired: ").append(toIndentedString(protectedShareRequired)).append("\n");
    sb.append("    protectedShareRequiredSendMail: ").append(toIndentedString(protectedShareRequiredSendMail)).append("\n");
    sb.append("    twoFactorLoginRequired: ").append(toIndentedString(twoFactorLoginRequired)).append("\n");
    sb.append("    officeDesktop: ").append(toIndentedString(officeDesktop)).append("\n");
    sb.append("    backupAccessPassword: ").append(toIndentedString(backupAccessPassword)).append("\n");
    sb.append("    ipRestrictions: ").append(toIndentedString(ipRestrictions)).append("\n");
    sb.append("    ipRestrictionsSharesExcluded: ").append(toIndentedString(ipRestrictionsSharesExcluded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

