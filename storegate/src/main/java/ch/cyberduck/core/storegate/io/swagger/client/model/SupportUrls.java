/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Urls to support sub pages
 */
@ApiModel(description = "Urls to support sub pages")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class SupportUrls {
  @JsonProperty("iosFiles")
  private String iosFiles = null;

  public SupportUrls iosFiles(String iosFiles) {
    this.iosFiles = iosFiles;
    return this;
  }

   /**
   * Url to support about Files in iOS
   * @return iosFiles
  **/
  @ApiModelProperty(value = "Url to support about Files in iOS")
  public String getIosFiles() {
    return iosFiles;
  }

  public void setIosFiles(String iosFiles) {
    this.iosFiles = iosFiles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportUrls supportUrls = (SupportUrls) o;
    return Objects.equals(this.iosFiles, supportUrls.iosFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(iosFiles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportUrls {\n");
    
    sb.append("    iosFiles: ").append(toIndentedString(iosFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

