/*
 * Storegate api v4.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.storegate.io.swagger.client.model.AttachmentDetails;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * 
 */
@ApiModel(description = "")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-08-24T11:36:23.792+02:00")
public class UploadAttachmentsFromServerRequest {
  @JsonProperty("attachmentToken")
  private String attachmentToken = null;

  @JsonProperty("ewsUrl")
  private String ewsUrl = null;

  @JsonProperty("attachments")
  private List<AttachmentDetails> attachments = null;

  @JsonProperty("parentId")
  private String parentId = null;

  public UploadAttachmentsFromServerRequest attachmentToken(String attachmentToken) {
    this.attachmentToken = attachmentToken;
    return this;
  }

   /**
   * 
   * @return attachmentToken
  **/
  @ApiModelProperty(value = "")
  public String getAttachmentToken() {
    return attachmentToken;
  }

  public void setAttachmentToken(String attachmentToken) {
    this.attachmentToken = attachmentToken;
  }

  public UploadAttachmentsFromServerRequest ewsUrl(String ewsUrl) {
    this.ewsUrl = ewsUrl;
    return this;
  }

   /**
   * 
   * @return ewsUrl
  **/
  @ApiModelProperty(value = "")
  public String getEwsUrl() {
    return ewsUrl;
  }

  public void setEwsUrl(String ewsUrl) {
    this.ewsUrl = ewsUrl;
  }

  public UploadAttachmentsFromServerRequest attachments(List<AttachmentDetails> attachments) {
    this.attachments = attachments;
    return this;
  }

  public UploadAttachmentsFromServerRequest addAttachmentsItem(AttachmentDetails attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * 
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<AttachmentDetails> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentDetails> attachments) {
    this.attachments = attachments;
  }

  public UploadAttachmentsFromServerRequest parentId(String parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * 
   * @return parentId
  **/
  @ApiModelProperty(value = "")
  public String getParentId() {
    return parentId;
  }

  public void setParentId(String parentId) {
    this.parentId = parentId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadAttachmentsFromServerRequest uploadAttachmentsFromServerRequest = (UploadAttachmentsFromServerRequest) o;
    return Objects.equals(this.attachmentToken, uploadAttachmentsFromServerRequest.attachmentToken) &&
        Objects.equals(this.ewsUrl, uploadAttachmentsFromServerRequest.ewsUrl) &&
        Objects.equals(this.attachments, uploadAttachmentsFromServerRequest.attachments) &&
        Objects.equals(this.parentId, uploadAttachmentsFromServerRequest.parentId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachmentToken, ewsUrl, attachments, parentId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadAttachmentsFromServerRequest {\n");
    
    sb.append("    attachmentToken: ").append(toIndentedString(attachmentToken)).append("\n");
    sb.append("    ewsUrl: ").append(toIndentedString(ewsUrl)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

